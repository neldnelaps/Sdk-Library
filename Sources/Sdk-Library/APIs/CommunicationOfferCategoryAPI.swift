//
// CommunicationOfferCategoryAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class CommunicationOfferCategoryAPI {

    /**
     Архивировать категорию рекламного материала.
     
     - parameter id: (path) Идентификатор. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func communicationOfferCategoryArchiveCategory(id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModel?, _ error: Error?) -> Void)) -> RequestTask {
        return communicationOfferCategoryArchiveCategoryWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Архивировать категорию рекламного материала.
     - POST /v1.2/communicationOffersCategories/{id}/archive
     - parameter id: (path) Идентификатор. 
     - returns: RequestBuilder<ResultModel> 
     */
    open class func communicationOfferCategoryArchiveCategoryWithRequestBuilder(id: Int) -> RequestBuilder<ResultModel> {
        var localVariablePath = "/v1.2/communicationOffersCategories/{id}/archive"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить список категорий рекламных материалов.
     
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter filterName: (query) Название категории. (optional)
     - parameter filterState: (query) Признак архивирования категории. (optional)
     - parameter filterPartnersIds: (query) Список идентификаторов партнеров. (optional)
     - parameter filterSortingIds: (query) Идентификаторы, которые будут выбираться первыми. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func communicationOfferCategoryGetCategories(from: Int? = nil, count: Int? = nil, filterName: String? = nil, filterState: ArchivedState? = nil, filterPartnersIds: [Int]? = nil, filterSortingIds: [Int]? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfCommunicationOfferCategoryViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return communicationOfferCategoryGetCategoriesWithRequestBuilder(from: from, count: count, filterName: filterName, filterState: filterState, filterPartnersIds: filterPartnersIds, filterSortingIds: filterSortingIds).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить список категорий рекламных материалов.
     - GET /v1.2/communicationOffersCategories
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter filterName: (query) Название категории. (optional)
     - parameter filterState: (query) Признак архивирования категории. (optional)
     - parameter filterPartnersIds: (query) Список идентификаторов партнеров. (optional)
     - parameter filterSortingIds: (query) Идентификаторы, которые будут выбираться первыми. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfCommunicationOfferCategoryViewModel> 
     */
    open class func communicationOfferCategoryGetCategoriesWithRequestBuilder(from: Int? = nil, count: Int? = nil, filterName: String? = nil, filterState: ArchivedState? = nil, filterPartnersIds: [Int]? = nil, filterSortingIds: [Int]? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfCommunicationOfferCategoryViewModel> {
        let localVariablePath = "/v1.2/communicationOffersCategories"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "filter.name": filterName?.encodeToJSON(),
            "filter.state": filterState?.encodeToJSON(),
            "filter.partnersIds": filterPartnersIds?.encodeToJSON(),
            "filter.sortingIds": filterSortingIds?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfCommunicationOfferCategoryViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить категорию рекламного материала.
     
     - parameter id: (path) Идентификатор. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func communicationOfferCategoryGetCategory(id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfCommunicationOfferCategoryViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return communicationOfferCategoryGetCategoryWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить категорию рекламного материала.
     - GET /v1.2/communicationOffersCategories/{id}
     - parameter id: (path) Идентификатор. 
     - returns: RequestBuilder<ResultModelOfCommunicationOfferCategoryViewModel> 
     */
    open class func communicationOfferCategoryGetCategoryWithRequestBuilder(id: Int) -> RequestBuilder<ResultModelOfCommunicationOfferCategoryViewModel> {
        var localVariablePath = "/v1.2/communicationOffersCategories/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfCommunicationOfferCategoryViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Восстановить архивированную категорию рекламного материала.
     
     - parameter id: (path) Идентификатор. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func communicationOfferCategoryRestoreCategory(id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModel?, _ error: Error?) -> Void)) -> RequestTask {
        return communicationOfferCategoryRestoreCategoryWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Восстановить архивированную категорию рекламного материала.
     - POST /v1.2/communicationOffersCategories/{id}/restore
     - parameter id: (path) Идентификатор. 
     - returns: RequestBuilder<ResultModel> 
     */
    open class func communicationOfferCategoryRestoreCategoryWithRequestBuilder(id: Int) -> RequestBuilder<ResultModel> {
        var localVariablePath = "/v1.2/communicationOffersCategories/{id}/restore"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
