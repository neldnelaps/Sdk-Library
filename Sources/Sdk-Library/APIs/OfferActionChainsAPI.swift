//
// OfferActionChainsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class OfferActionChainsAPI {

    /**
     Получает список доступных действий.
     
     - parameter offerId: (path) Идентификатор акции. 
     - parameter offerVersion: (path) Дескриптор версии акции. 
     - parameter eventType: (query) Тип события. 
     - parameter exclusionType: (query) Тип события, по которому требуется отфильтровать типы действий. (optional)
     - parameter chainId: (query) Идентификатор цепочки действий. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func offerActionChainsGetAvailableActionTypes(offerId: Int, offerVersion: String, eventType: OfferEventType, exclusionType: OfferEventType? = nil, chainId: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfActionTypeModel?, _ error: Error?) -> Void)) -> RequestTask {
        return offerActionChainsGetAvailableActionTypesWithRequestBuilder(offerId: offerId, offerVersion: offerVersion, eventType: eventType, exclusionType: exclusionType, chainId: chainId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получает список доступных действий.
     - GET /v1.2/Offers/{offerId}/versions/{offerVersion}/AvailableActionTypes
     - parameter offerId: (path) Идентификатор акции. 
     - parameter offerVersion: (path) Дескриптор версии акции. 
     - parameter eventType: (query) Тип события. 
     - parameter exclusionType: (query) Тип события, по которому требуется отфильтровать типы действий. (optional)
     - parameter chainId: (query) Идентификатор цепочки действий. (optional)
     - returns: RequestBuilder<ResultModelOfListOfActionTypeModel> 
     */
    open class func offerActionChainsGetAvailableActionTypesWithRequestBuilder(offerId: Int, offerVersion: String, eventType: OfferEventType, exclusionType: OfferEventType? = nil, chainId: Int? = nil) -> RequestBuilder<ResultModelOfListOfActionTypeModel> {
        var localVariablePath = "/v1.2/Offers/{offerId}/versions/{offerVersion}/AvailableActionTypes"
        let offerIdPreEscape = "\(APIHelper.mapValueToPathItem(offerId))"
        let offerIdPostEscape = offerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{offerId}", with: offerIdPostEscape, options: .literal, range: nil)
        let offerVersionPreEscape = "\(APIHelper.mapValueToPathItem(offerVersion))"
        let offerVersionPostEscape = offerVersionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{offerVersion}", with: offerVersionPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "eventType": eventType.encodeToJSON(),
            "exclusionType": exclusionType?.encodeToJSON(),
            "chainId": chainId?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfActionTypeModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получает список доступных событий.
     
     - parameter includeSubEvents: (query) Если true вернутся все события без исключения. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func offerActionChainsGetAvailableEventTypes(includeSubEvents: Bool? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfOfferEventModel?, _ error: Error?) -> Void)) -> RequestTask {
        return offerActionChainsGetAvailableEventTypesWithRequestBuilder(includeSubEvents: includeSubEvents).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получает список доступных событий.
     - GET /v1.2/Offers/AvailableEventTypes
     - parameter includeSubEvents: (query) Если true вернутся все события без исключения. (optional)
     - returns: RequestBuilder<ResultModelOfListOfOfferEventModel> 
     */
    open class func offerActionChainsGetAvailableEventTypesWithRequestBuilder(includeSubEvents: Bool? = nil) -> RequestBuilder<ResultModelOfListOfOfferEventModel> {
        let localVariablePath = "/v1.2/Offers/AvailableEventTypes"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "includeSubEvents": includeSubEvents?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfOfferEventModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получает список имеющихся действий.
     
     - parameter offerId: (path) Идентификатор акции. 
     - parameter offerVersion: (path) Дескриптор версии акции. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func offerActionChainsGetEventTypes(offerId: Int, offerVersion: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfOfferEventInfoModel?, _ error: Error?) -> Void)) -> RequestTask {
        return offerActionChainsGetEventTypesWithRequestBuilder(offerId: offerId, offerVersion: offerVersion).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получает список имеющихся действий.
     - GET /v1.2/Offers/{offerId}/versions/{offerVersion}/offerChains/eventTypes
     - parameter offerId: (path) Идентификатор акции. 
     - parameter offerVersion: (path) Дескриптор версии акции. 
     - returns: RequestBuilder<ResultModelOfListOfOfferEventInfoModel> 
     */
    open class func offerActionChainsGetEventTypesWithRequestBuilder(offerId: Int, offerVersion: String) -> RequestBuilder<ResultModelOfListOfOfferEventInfoModel> {
        var localVariablePath = "/v1.2/Offers/{offerId}/versions/{offerVersion}/offerChains/eventTypes"
        let offerIdPreEscape = "\(APIHelper.mapValueToPathItem(offerId))"
        let offerIdPostEscape = offerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{offerId}", with: offerIdPostEscape, options: .literal, range: nil)
        let offerVersionPreEscape = "\(APIHelper.mapValueToPathItem(offerVersion))"
        let offerVersionPostEscape = offerVersionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{offerVersion}", with: offerVersionPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfOfferEventInfoModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получает цепочку событий.
     
     - parameter offerId: (path) Идентификатор акции. 
     - parameter offerChainId: (path) Идентификатор цепочки действий. 
     - parameter offerVersion: (path) Дескриптор версии акции. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func offerActionChainsGetOfferActionChain(offerId: Int, offerChainId: Int, offerVersion: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfOfferActionChainViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return offerActionChainsGetOfferActionChainWithRequestBuilder(offerId: offerId, offerChainId: offerChainId, offerVersion: offerVersion).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получает цепочку событий.
     - GET /v1.2/Offers/{offerId}/versions/{offerVersion}/offerChains/{offerChainId}
     - parameter offerId: (path) Идентификатор акции. 
     - parameter offerChainId: (path) Идентификатор цепочки действий. 
     - parameter offerVersion: (path) Дескриптор версии акции. 
     - returns: RequestBuilder<ResultModelOfOfferActionChainViewModel> 
     */
    open class func offerActionChainsGetOfferActionChainWithRequestBuilder(offerId: Int, offerChainId: Int, offerVersion: String) -> RequestBuilder<ResultModelOfOfferActionChainViewModel> {
        var localVariablePath = "/v1.2/Offers/{offerId}/versions/{offerVersion}/offerChains/{offerChainId}"
        let offerIdPreEscape = "\(APIHelper.mapValueToPathItem(offerId))"
        let offerIdPostEscape = offerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{offerId}", with: offerIdPostEscape, options: .literal, range: nil)
        let offerChainIdPreEscape = "\(APIHelper.mapValueToPathItem(offerChainId))"
        let offerChainIdPostEscape = offerChainIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{offerChainId}", with: offerChainIdPostEscape, options: .literal, range: nil)
        let offerVersionPreEscape = "\(APIHelper.mapValueToPathItem(offerVersion))"
        let offerVersionPostEscape = offerVersionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{offerVersion}", with: offerVersionPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfOfferActionChainViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получает все цепочки событий акции.
     
     - parameter offerId: (path) Идентификатор акции. 
     - parameter offerVersion: (path) Дескриптор версии акции. 
     - parameter eventType: (query) Тип события. (optional)
     - parameter parentId: (query) Идентификатор родительского действия. (optional)
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func offerActionChainsGetOfferActionChains(offerId: Int, offerVersion: String, eventType: OfferEventType? = nil, parentId: Int? = nil, from: Int? = nil, count: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfOfferActionChainViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return offerActionChainsGetOfferActionChainsWithRequestBuilder(offerId: offerId, offerVersion: offerVersion, eventType: eventType, parentId: parentId, from: from, count: count).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получает все цепочки событий акции.
     - GET /v1.2/Offers/{offerId}/versions/{offerVersion}/offerChains
     - parameter offerId: (path) Идентификатор акции. 
     - parameter offerVersion: (path) Дескриптор версии акции. 
     - parameter eventType: (query) Тип события. (optional)
     - parameter parentId: (query) Идентификатор родительского действия. (optional)
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfOfferActionChainViewModel> 
     */
    open class func offerActionChainsGetOfferActionChainsWithRequestBuilder(offerId: Int, offerVersion: String, eventType: OfferEventType? = nil, parentId: Int? = nil, from: Int? = nil, count: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfOfferActionChainViewModel> {
        var localVariablePath = "/v1.2/Offers/{offerId}/versions/{offerVersion}/offerChains"
        let offerIdPreEscape = "\(APIHelper.mapValueToPathItem(offerId))"
        let offerIdPostEscape = offerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{offerId}", with: offerIdPostEscape, options: .literal, range: nil)
        let offerVersionPreEscape = "\(APIHelper.mapValueToPathItem(offerVersion))"
        let offerVersionPostEscape = offerVersionPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{offerVersion}", with: offerVersionPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "eventType": eventType?.encodeToJSON(),
            "parentId": parentId?.encodeToJSON(),
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfOfferActionChainViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить информацию о родительском действии по идентификатору.
     
     - parameter offerId: (path) Идентификатор акции. 
     - parameter actionId: (path) Идентификатор действия. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func offerActionChainsGetParentActionIndex(offerId: Int, actionId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfActionPlacementInfo?, _ error: Error?) -> Void)) -> RequestTask {
        return offerActionChainsGetParentActionIndexWithRequestBuilder(offerId: offerId, actionId: actionId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить информацию о родительском действии по идентификатору.
     - GET /v1.2/Offers/{offerId}/offerChains/parentActions/{actionId}
     - parameter offerId: (path) Идентификатор акции. 
     - parameter actionId: (path) Идентификатор действия. 
     - returns: RequestBuilder<ResultModelOfActionPlacementInfo> 
     */
    open class func offerActionChainsGetParentActionIndexWithRequestBuilder(offerId: Int, actionId: Int) -> RequestBuilder<ResultModelOfActionPlacementInfo> {
        var localVariablePath = "/v1.2/Offers/{offerId}/offerChains/parentActions/{actionId}"
        let offerIdPreEscape = "\(APIHelper.mapValueToPathItem(offerId))"
        let offerIdPostEscape = offerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{offerId}", with: offerIdPostEscape, options: .literal, range: nil)
        let actionIdPreEscape = "\(APIHelper.mapValueToPathItem(actionId))"
        let actionIdPostEscape = actionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{actionId}", with: actionIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfActionPlacementInfo>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
