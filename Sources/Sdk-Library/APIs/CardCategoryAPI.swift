//
// CardCategoryAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class CardCategoryAPI {

    /**
     Возвращает список всех категорий карт.
     
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter substring: (query) Подстрока для поиска. (optional)
     - parameter forImport: (query) Фильтр. True категории для импорта. False все. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func cardCategoryGetCardCategories(from: Int? = nil, count: Int? = nil, substring: String? = nil, forImport: Bool? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfCardCategoryModel?, _ error: Error?) -> Void)) -> RequestTask {
        return cardCategoryGetCardCategoriesWithRequestBuilder(from: from, count: count, substring: substring, forImport: forImport).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает список всех категорий карт.
     - GET /v1.2/cardCategories
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter substring: (query) Подстрока для поиска. (optional)
     - parameter forImport: (query) Фильтр. True категории для импорта. False все. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfCardCategoryModel> 
     */
    open class func cardCategoryGetCardCategoriesWithRequestBuilder(from: Int? = nil, count: Int? = nil, substring: String? = nil, forImport: Bool? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfCardCategoryModel> {
        let localVariablePath = "/v1.2/cardCategories"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "substring": substring?.encodeToJSON(),
            "forImport": forImport?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfCardCategoryModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает категорию по id.
     
     - parameter id: (path) Id категории. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func cardCategoryGetCardCategory(id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfCardCategoryModel?, _ error: Error?) -> Void)) -> RequestTask {
        return cardCategoryGetCardCategoryWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает категорию по id.
     - GET /v1.2/cardCategories/{id}
     - parameter id: (path) Id категории. 
     - returns: RequestBuilder<ResultModelOfCardCategoryModel> 
     */
    open class func cardCategoryGetCardCategoryWithRequestBuilder(id: Int) -> RequestBuilder<ResultModelOfCardCategoryModel> {
        var localVariablePath = "/v1.2/cardCategories/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfCardCategoryModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
