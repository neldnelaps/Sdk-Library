//
// BatchOperationsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class BatchOperationsAPI {

    /**
     Возвращает список юридических лиц, доступных для операций начисления/списания.
     
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter substring: (query) Подстрока для поиска по названию юридического лица. (optional)
     - parameter mode: (query) Признак состояния юрилического лица (Archived - архивное, NonArchived - неархивное). (optional)
     - parameter loyaltyProgramId: (query) Внутренний идентификатор программы лояльности. (optional)
     - parameter partnerId: (query) Внутренний идентификатор Партнера. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchOperationsGetAvailableLegals(from: Int? = nil, count: Int? = nil, substring: String? = nil, mode: ArchivedState? = nil, loyaltyProgramId: Int? = nil, partnerId: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfLegalViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return batchOperationsGetAvailableLegalsWithRequestBuilder(from: from, count: count, substring: substring, mode: mode, loyaltyProgramId: loyaltyProgramId, partnerId: partnerId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает список юридических лиц, доступных для операций начисления/списания.
     - GET /v1.2/deposit/legals
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter substring: (query) Подстрока для поиска по названию юридического лица. (optional)
     - parameter mode: (query) Признак состояния юрилического лица (Archived - архивное, NonArchived - неархивное). (optional)
     - parameter loyaltyProgramId: (query) Внутренний идентификатор программы лояльности. (optional)
     - parameter partnerId: (query) Внутренний идентификатор Партнера. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfLegalViewModel> 
     */
    open class func batchOperationsGetAvailableLegalsWithRequestBuilder(from: Int? = nil, count: Int? = nil, substring: String? = nil, mode: ArchivedState? = nil, loyaltyProgramId: Int? = nil, partnerId: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfLegalViewModel> {
        let localVariablePath = "/v1.2/deposit/legals"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "substring": substring?.encodeToJSON(),
            "mode": mode?.encodeToJSON(),
            "loyaltyProgramId": loyaltyProgramId?.encodeToJSON(),
            "partnerId": partnerId?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfLegalViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает список операций по внутреннему идентификатору пакетного начисления/списания.
     
     - parameter batchId: (path) Внутренний идентификатор пакетного начисления/списания. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchOperationsGetBatch(batchId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfBatchOperationsViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return batchOperationsGetBatchWithRequestBuilder(batchId: batchId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает список операций по внутреннему идентификатору пакетного начисления/списания.
     - GET /v1.2/deposit/{batchId}
     - parameter batchId: (path) Внутренний идентификатор пакетного начисления/списания. 
     - returns: RequestBuilder<ResultModelOfBatchOperationsViewModel> 
     */
    open class func batchOperationsGetBatchWithRequestBuilder(batchId: Int) -> RequestBuilder<ResultModelOfBatchOperationsViewModel> {
        var localVariablePath = "/v1.2/deposit/{batchId}"
        let batchIdPreEscape = "\(APIHelper.mapValueToPathItem(batchId))"
        let batchIdPostEscape = batchIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{batchId}", with: batchIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfBatchOperationsViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает информацию о прогрессе выполнения пакетного начисления/списания.
     
     - parameter batchId: (path) Внутренний идентификатор пакетного начисления/списания. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchOperationsGetBatchOperationsQueueProgress(batchId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfBatchOperationsQueueInfo?, _ error: Error?) -> Void)) -> RequestTask {
        return batchOperationsGetBatchOperationsQueueProgressWithRequestBuilder(batchId: batchId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о прогрессе выполнения пакетного начисления/списания.
     - GET /v1.2/deposit/{batchId}/progress
     - parameter batchId: (path) Внутренний идентификатор пакетного начисления/списания. 
     - returns: RequestBuilder<ResultModelOfBatchOperationsQueueInfo> 
     */
    open class func batchOperationsGetBatchOperationsQueueProgressWithRequestBuilder(batchId: Int) -> RequestBuilder<ResultModelOfBatchOperationsQueueInfo> {
        var localVariablePath = "/v1.2/deposit/{batchId}/progress"
        let batchIdPreEscape = "\(APIHelper.mapValueToPathItem(batchId))"
        let batchIdPostEscape = batchIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{batchId}", with: batchIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfBatchOperationsQueueInfo>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает информацию о количестве обработанных операций в пакетном начислении/списании.
     
     - parameter batchId: (path) Внутренний идентификатор пакетного начисления/списания. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchOperationsGetBatchOperationsTransactionQueueProgress(batchId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfBatchOperationsTransactionQueueInfo?, _ error: Error?) -> Void)) -> RequestTask {
        return batchOperationsGetBatchOperationsTransactionQueueProgressWithRequestBuilder(batchId: batchId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о количестве обработанных операций в пакетном начислении/списании.
     - GET /v1.2/deposit/{batchId}/transactionProgress
     - parameter batchId: (path) Внутренний идентификатор пакетного начисления/списания. 
     - returns: RequestBuilder<ResultModelOfBatchOperationsTransactionQueueInfo> 
     */
    open class func batchOperationsGetBatchOperationsTransactionQueueProgressWithRequestBuilder(batchId: Int) -> RequestBuilder<ResultModelOfBatchOperationsTransactionQueueInfo> {
        var localVariablePath = "/v1.2/deposit/{batchId}/transactionProgress"
        let batchIdPreEscape = "\(APIHelper.mapValueToPathItem(batchId))"
        let batchIdPostEscape = batchIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{batchId}", with: batchIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfBatchOperationsTransactionQueueInfo>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает детальный список операций по внутреннему идентификатору пакетного начисления/списания.
     
     - parameter batchId: (path) Внутренний идентификатор пакетного начисления/списания. 
     - parameter filterIdentifierType: (query) Тип идентификатора клиента. (optional)
     - parameter filterFrom: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter filterCount: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter filterIsCustomerIdNeeded: (query) Нужно ли для операций возвращать CustomerId. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchOperationsGetOperations(batchId: Int, filterIdentifierType: IdentifierType? = nil, filterFrom: Int? = nil, filterCount: Int? = nil, filterIsCustomerIdNeeded: Bool? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfOperationViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return batchOperationsGetOperationsWithRequestBuilder(batchId: batchId, filterIdentifierType: filterIdentifierType, filterFrom: filterFrom, filterCount: filterCount, filterIsCustomerIdNeeded: filterIsCustomerIdNeeded).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает детальный список операций по внутреннему идентификатору пакетного начисления/списания.
     - GET /v1.2/deposit/{batchId}/operations
     - parameter batchId: (path) Внутренний идентификатор пакетного начисления/списания. 
     - parameter filterIdentifierType: (query) Тип идентификатора клиента. (optional)
     - parameter filterFrom: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter filterCount: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter filterIsCustomerIdNeeded: (query) Нужно ли для операций возвращать CustomerId. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfOperationViewModel> 
     */
    open class func batchOperationsGetOperationsWithRequestBuilder(batchId: Int, filterIdentifierType: IdentifierType? = nil, filterFrom: Int? = nil, filterCount: Int? = nil, filterIsCustomerIdNeeded: Bool? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfOperationViewModel> {
        var localVariablePath = "/v1.2/deposit/{batchId}/operations"
        let batchIdPreEscape = "\(APIHelper.mapValueToPathItem(batchId))"
        let batchIdPostEscape = batchIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{batchId}", with: batchIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "filter.identifierType": filterIdentifierType?.encodeToJSON(),
            "filter.from": filterFrom?.encodeToJSON(),
            "filter.count": filterCount?.encodeToJSON(),
            "filter.isCustomerIdNeeded": filterIsCustomerIdNeeded?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfOperationViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает список пакетных начислений/списаний в виде csv-файла.
     
     - parameter batchId: (path) Внутренний идентификатор пакетного начисления/списания. 
     - parameter deferredOperationState: (query) Состояние операции (Created - в процессе инициализации, Completed - подтверждена, Error - ошибка). 
     - parameter timeZone: (query) Часовой пояс, в котором проводилась операция начисления/списания. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchOperationsGetOperationsCsv(batchId: Int, deferredOperationState: DeferredOperationState, timeZone: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: String?, _ error: Error?) -> Void)) -> RequestTask {
        return batchOperationsGetOperationsCsvWithRequestBuilder(batchId: batchId, deferredOperationState: deferredOperationState, timeZone: timeZone).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает список пакетных начислений/списаний в виде csv-файла.
     - GET /v1.2/deposit/{batchId}/export
     - parameter batchId: (path) Внутренний идентификатор пакетного начисления/списания. 
     - parameter deferredOperationState: (query) Состояние операции (Created - в процессе инициализации, Completed - подтверждена, Error - ошибка). 
     - parameter timeZone: (query) Часовой пояс, в котором проводилась операция начисления/списания. (optional)
     - returns: RequestBuilder<String> 
     */
    open class func batchOperationsGetOperationsCsvWithRequestBuilder(batchId: Int, deferredOperationState: DeferredOperationState, timeZone: Int? = nil) -> RequestBuilder<String> {
        var localVariablePath = "/v1.2/deposit/{batchId}/export"
        let batchIdPreEscape = "\(APIHelper.mapValueToPathItem(batchId))"
        let batchIdPostEscape = batchIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{batchId}", with: batchIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "deferredOperationState": deferredOperationState.encodeToJSON(),
            "timeZone": timeZone?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<String>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает список номеров карт и соответствующих сумм для начисления/списания, извлеченных из csv-файла.
     
     - parameter file: (query) file to upload 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchOperationsGetOperationsDataFromCsv(file: URL, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfParsedBatchOperationsModel?, _ error: Error?) -> Void)) -> RequestTask {
        return batchOperationsGetOperationsDataFromCsvWithRequestBuilder(file: file).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает список номеров карт и соответствующих сумм для начисления/списания, извлеченных из csv-файла.
     - POST /v1.2/deposit/validateCsv
     - parameter file: (query) file to upload 
     - returns: RequestBuilder<ResultModelOfParsedBatchOperationsModel> 
     */
    open class func batchOperationsGetOperationsDataFromCsvWithRequestBuilder(file: URL) -> RequestBuilder<ResultModelOfParsedBatchOperationsModel> {
        let localVariablePath = "/v1.2/deposit/validateCsv"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "file": file.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfParsedBatchOperationsModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает историю операций с бонусами.
     
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter filterFromDate: (query) Начальная дата периода в формате 0000-00-00T00:00:00Z. (optional)
     - parameter filterToDate: (query) Конечная дата периода в формате 0000-00-00T00:00:00Z. (optional)
     - parameter filterType: (query) Тип операции (Deposit – начисление, Withdraw – списание). (optional)
     - parameter filterState: (query) Состояние операции (NotProcessed – необработанная, Processed – обработанная,  Suspended - приостановлена). (optional)
     - parameter filterIdentifier: (query) Значение идентификатора клиента. (optional)
     - parameter filterIdentifierType: (query) Тип идентификатора клиента. (optional)
     - parameter filterLoyaltyPrograms: (query) Список программ лояльности. (optional)
     - parameter filterMarketingCampaigns: (query) Список маркетинговых компаний. (optional)
     - parameter filterTargetGroup: (query) Целевая аудитория. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchOperationsGetOperationsHistory(from: Int? = nil, count: Int? = nil, filterFromDate: String? = nil, filterToDate: String? = nil, filterType: BatchType? = nil, filterState: BatchState? = nil, filterIdentifier: String? = nil, filterIdentifierType: IdentifierType? = nil, filterLoyaltyPrograms: [Int]? = nil, filterMarketingCampaigns: [Int]? = nil, filterTargetGroup: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfBatchOperationsBriefViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return batchOperationsGetOperationsHistoryWithRequestBuilder(from: from, count: count, filterFromDate: filterFromDate, filterToDate: filterToDate, filterType: filterType, filterState: filterState, filterIdentifier: filterIdentifier, filterIdentifierType: filterIdentifierType, filterLoyaltyPrograms: filterLoyaltyPrograms, filterMarketingCampaigns: filterMarketingCampaigns, filterTargetGroup: filterTargetGroup).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает историю операций с бонусами.
     - GET /v1.2/deposit
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter filterFromDate: (query) Начальная дата периода в формате 0000-00-00T00:00:00Z. (optional)
     - parameter filterToDate: (query) Конечная дата периода в формате 0000-00-00T00:00:00Z. (optional)
     - parameter filterType: (query) Тип операции (Deposit – начисление, Withdraw – списание). (optional)
     - parameter filterState: (query) Состояние операции (NotProcessed – необработанная, Processed – обработанная,  Suspended - приостановлена). (optional)
     - parameter filterIdentifier: (query) Значение идентификатора клиента. (optional)
     - parameter filterIdentifierType: (query) Тип идентификатора клиента. (optional)
     - parameter filterLoyaltyPrograms: (query) Список программ лояльности. (optional)
     - parameter filterMarketingCampaigns: (query) Список маркетинговых компаний. (optional)
     - parameter filterTargetGroup: (query) Целевая аудитория. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfBatchOperationsBriefViewModel> 
     */
    open class func batchOperationsGetOperationsHistoryWithRequestBuilder(from: Int? = nil, count: Int? = nil, filterFromDate: String? = nil, filterToDate: String? = nil, filterType: BatchType? = nil, filterState: BatchState? = nil, filterIdentifier: String? = nil, filterIdentifierType: IdentifierType? = nil, filterLoyaltyPrograms: [Int]? = nil, filterMarketingCampaigns: [Int]? = nil, filterTargetGroup: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfBatchOperationsBriefViewModel> {
        let localVariablePath = "/v1.2/deposit"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "filter.fromDate": filterFromDate?.encodeToJSON(),
            "filter.toDate": filterToDate?.encodeToJSON(),
            "filter.type": filterType?.encodeToJSON(),
            "filter.state": filterState?.encodeToJSON(),
            "filter.identifier": filterIdentifier?.encodeToJSON(),
            "filter.identifierType": filterIdentifierType?.encodeToJSON(),
            "filter.loyaltyPrograms": filterLoyaltyPrograms?.encodeToJSON(),
            "filter.marketingCampaigns": filterMarketingCampaigns?.encodeToJSON(),
            "filter.targetGroup": filterTargetGroup?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfBatchOperationsBriefViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
