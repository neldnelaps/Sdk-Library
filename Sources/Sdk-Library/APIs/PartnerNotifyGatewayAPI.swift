//
// PartnerNotifyGatewayAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class PartnerNotifyGatewayAPI {

    /**
     Удаляет шлюз Партнера.
     
     - parameter id: (path) Внутренний идентификатор шлюза. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func partnerNotifyGatewayDeletePartnerGateway(id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModel?, _ error: Error?) -> Void)) -> RequestTask {
        return partnerNotifyGatewayDeletePartnerGatewayWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Удаляет шлюз Партнера.
     - DELETE /v1.2/partnerNotifyGateways/{id}
     - parameter id: (path) Внутренний идентификатор шлюза. 
     - returns: RequestBuilder<ResultModel> 
     */
    open class func partnerNotifyGatewayDeletePartnerGatewayWithRequestBuilder(id: Int) -> RequestBuilder<ResultModel> {
        var localVariablePath = "/v1.2/partnerNotifyGateways/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает список шлюзов, которые можно добавить Партнеру.
     
     - parameter partnerId: (path) Внутренний идентификатор Партнера. 
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func partnerNotifyGatewayGetPartnerAvailableGateway(partnerId: Int, from: Int? = nil, count: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfGatewayModel?, _ error: Error?) -> Void)) -> RequestTask {
        return partnerNotifyGatewayGetPartnerAvailableGatewayWithRequestBuilder(partnerId: partnerId, from: from, count: count).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает список шлюзов, которые можно добавить Партнеру.
     - GET /v1.2/partnerNotifyGateways/partner/{partnerId}
     - parameter partnerId: (path) Внутренний идентификатор Партнера. 
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfGatewayModel> 
     */
    open class func partnerNotifyGatewayGetPartnerAvailableGatewayWithRequestBuilder(partnerId: Int, from: Int? = nil, count: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfGatewayModel> {
        var localVariablePath = "/v1.2/partnerNotifyGateways/partner/{partnerId}"
        let partnerIdPreEscape = "\(APIHelper.mapValueToPathItem(partnerId))"
        let partnerIdPostEscape = partnerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{partnerId}", with: partnerIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfGatewayModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает информацию о шлюзе по его внутреннему идентификатору.
     
     - parameter gatewayId: (path) Внутренний идентификатор шлюза. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func partnerNotifyGatewayGetPartnerGateway(gatewayId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPartnerNotifyGatewayViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return partnerNotifyGatewayGetPartnerGatewayWithRequestBuilder(gatewayId: gatewayId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о шлюзе по его внутреннему идентификатору.
     - GET /v1.2/partnerNotifyGateways/{gatewayId}
     - parameter gatewayId: (path) Внутренний идентификатор шлюза. 
     - returns: RequestBuilder<ResultModelOfPartnerNotifyGatewayViewModel> 
     */
    open class func partnerNotifyGatewayGetPartnerGatewayWithRequestBuilder(gatewayId: Int) -> RequestBuilder<ResultModelOfPartnerNotifyGatewayViewModel> {
        var localVariablePath = "/v1.2/partnerNotifyGateways/{gatewayId}"
        let gatewayIdPreEscape = "\(APIHelper.mapValueToPathItem(gatewayId))"
        let gatewayIdPostEscape = gatewayIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{gatewayId}", with: gatewayIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPartnerNotifyGatewayViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает список шлюзов Партнера.
     
     - parameter partnerId: (query) Внутренний идентификатор Партнера. 
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func partnerNotifyGatewayGetPartnerGateways(partnerId: Int, from: Int? = nil, count: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfPartnerNotifyGatewayViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return partnerNotifyGatewayGetPartnerGatewaysWithRequestBuilder(partnerId: partnerId, from: from, count: count).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает список шлюзов Партнера.
     - GET /v1.2/partnerNotifyGateways
     - parameter partnerId: (query) Внутренний идентификатор Партнера. 
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfPartnerNotifyGatewayViewModel> 
     */
    open class func partnerNotifyGatewayGetPartnerGatewaysWithRequestBuilder(partnerId: Int, from: Int? = nil, count: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfPartnerNotifyGatewayViewModel> {
        let localVariablePath = "/v1.2/partnerNotifyGateways"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "partnerId": partnerId.encodeToJSON(),
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfPartnerNotifyGatewayViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
