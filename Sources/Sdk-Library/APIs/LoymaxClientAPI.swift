//
// LoymaxClientAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class LoymaxClientAPI {

    /**
     Получает список доступных для отслеживания типов активности.
     
     - parameter provider: (path) Провайдер. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func loymaxClientActivities(provider: OAuthProviderType, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfOAuthActivityType?, _ error: Error?) -> Void)) -> RequestTask {
        return loymaxClientActivitiesWithRequestBuilder(provider: provider).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получает список доступных для отслеживания типов активности.
     - GET /v1.2/OAuth/Clients/{provider}/Activities
     - parameter provider: (path) Провайдер. 
     - returns: RequestBuilder<ResultModelOfListOfOAuthActivityType> 
     */
    open class func loymaxClientActivitiesWithRequestBuilder(provider: OAuthProviderType) -> RequestBuilder<ResultModelOfListOfOAuthActivityType> {
        var localVariablePath = "/v1.2/OAuth/Clients/{provider}/Activities"
        let providerPreEscape = "\(APIHelper.mapValueToPathItem(provider))"
        let providerPostEscape = providerPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{provider}", with: providerPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfOAuthActivityType>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает OAuth клиента по id.
     
     - parameter id: (path) Id OAuth клиента. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func loymaxClientGet(id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfOAuthSettings?, _ error: Error?) -> Void)) -> RequestTask {
        return loymaxClientGetWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает OAuth клиента по id.
     - GET /v1.2/OAuth/Clients/{id}
     - parameter id: (path) Id OAuth клиента. 
     - returns: RequestBuilder<ResultModelOfOAuthSettings> 
     */
    open class func loymaxClientGetWithRequestBuilder(id: Int) -> RequestBuilder<ResultModelOfOAuthSettings> {
        var localVariablePath = "/v1.2/OAuth/Clients/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfOAuthSettings>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получает список доступных OAuth клиентов.
     
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter mode: (query) Признак архивации. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func loymaxClientGetOAuthClients(from: Int? = nil, count: Int? = nil, mode: ArchivedState? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfOAuthSettings?, _ error: Error?) -> Void)) -> RequestTask {
        return loymaxClientGetOAuthClientsWithRequestBuilder(from: from, count: count, mode: mode).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получает список доступных OAuth клиентов.
     - GET /v1.2/OAuth/Clients
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter mode: (query) Признак архивации. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfOAuthSettings> 
     */
    open class func loymaxClientGetOAuthClientsWithRequestBuilder(from: Int? = nil, count: Int? = nil, mode: ArchivedState? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfOAuthSettings> {
        let localVariablePath = "/v1.2/OAuth/Clients"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "mode": mode?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfOAuthSettings>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получает список доступных для отслеживания объектов.
     
     - parameter provider: (path) Провайдер. 
     - parameter target: (path) Идентификатор объекта (владельца публикаций  пользователь, группа и т.п.). 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func loymaxClientObjects(provider: OAuthProviderType, target: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfClientObjectModel?, _ error: Error?) -> Void)) -> RequestTask {
        return loymaxClientObjectsWithRequestBuilder(provider: provider, target: target).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получает список доступных для отслеживания объектов.
     - GET /v1.2/OAuth/Clients/{provider}/Objects/{target}
     - parameter provider: (path) Провайдер. 
     - parameter target: (path) Идентификатор объекта (владельца публикаций  пользователь, группа и т.п.). 
     - returns: RequestBuilder<ResultModelOfListOfClientObjectModel> 
     */
    open class func loymaxClientObjectsWithRequestBuilder(provider: OAuthProviderType, target: String) -> RequestBuilder<ResultModelOfListOfClientObjectModel> {
        var localVariablePath = "/v1.2/OAuth/Clients/{provider}/Objects/{target}"
        let providerPreEscape = "\(APIHelper.mapValueToPathItem(provider))"
        let providerPostEscape = providerPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{provider}", with: providerPostEscape, options: .literal, range: nil)
        let targetPreEscape = "\(APIHelper.mapValueToPathItem(target))"
        let targetPostEscape = targetPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{target}", with: targetPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfClientObjectModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Восстановление OAuth клиента по id записи.
     
     - parameter id: (path) Id запроса. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func loymaxClientRestore(id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModel?, _ error: Error?) -> Void)) -> RequestTask {
        return loymaxClientRestoreWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Восстановление OAuth клиента по id записи.
     - POST /v1.2/OAuth/Clients/{id}/restore
     - parameter id: (path) Id запроса. 
     - returns: RequestBuilder<ResultModel> 
     */
    open class func loymaxClientRestoreWithRequestBuilder(id: Int) -> RequestBuilder<ResultModel> {
        var localVariablePath = "/v1.2/OAuth/Clients/{id}/restore"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
