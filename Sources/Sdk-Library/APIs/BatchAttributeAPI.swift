//
// BatchAttributeAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class BatchAttributeAPI {

    /**
     Возвращает список пользователей АРМ, которые проводили пакетные обновления атрибутов клиентов.
     
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter name: (query) Имя и фамилия пользователя АРМ. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchAttributeGetAvailableCreators(from: Int? = nil, count: Int? = nil, name: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfCreatorModel?, _ error: Error?) -> Void)) -> RequestTask {
        return batchAttributeGetAvailableCreatorsWithRequestBuilder(from: from, count: count, name: name).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает список пользователей АРМ, которые проводили пакетные обновления атрибутов клиентов.
     - GET /v1.2/batchAttribute/creators
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter name: (query) Имя и фамилия пользователя АРМ. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfCreatorModel> 
     */
    open class func batchAttributeGetAvailableCreatorsWithRequestBuilder(from: Int? = nil, count: Int? = nil, name: String? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfCreatorModel> {
        let localVariablePath = "/v1.2/batchAttribute/creators"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "name": name?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfCreatorModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает информацию о пакетном обновлении атрубитов клиентов (по внутреннему идентификатору пакетного обновления).
     
     - parameter batchId: (path) Внутренний идентификатор пакетного обновления атрибутов клиентов. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchAttributeGetBatch(batchId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfBatchAttributeUpdateModel?, _ error: Error?) -> Void)) -> RequestTask {
        return batchAttributeGetBatchWithRequestBuilder(batchId: batchId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о пакетном обновлении атрубитов клиентов (по внутреннему идентификатору пакетного обновления).
     - GET /v1.2/batchAttribute/{batchId}
     - parameter batchId: (path) Внутренний идентификатор пакетного обновления атрибутов клиентов. 
     - returns: RequestBuilder<ResultModelOfBatchAttributeUpdateModel> 
     */
    open class func batchAttributeGetBatchWithRequestBuilder(batchId: Int) -> RequestBuilder<ResultModelOfBatchAttributeUpdateModel> {
        var localVariablePath = "/v1.2/batchAttribute/{batchId}"
        let batchIdPreEscape = "\(APIHelper.mapValueToPathItem(batchId))"
        let batchIdPostEscape = batchIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{batchId}", with: batchIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfBatchAttributeUpdateModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает информацию о состоянии операций пакетного обновления атрибутов клиентов.
     
     - parameter batchId: (path) Внутренний идентификатор пакетного обновления атрибутов клиентов. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchAttributeGetBatchOperationsQueueProgress(batchId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfBatchOperationsQueueInfo?, _ error: Error?) -> Void)) -> RequestTask {
        return batchAttributeGetBatchOperationsQueueProgressWithRequestBuilder(batchId: batchId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о состоянии операций пакетного обновления атрибутов клиентов.
     - GET /v1.2/batchAttribute/{batchId}/progress
     - parameter batchId: (path) Внутренний идентификатор пакетного обновления атрибутов клиентов. 
     - returns: RequestBuilder<ResultModelOfBatchOperationsQueueInfo> 
     */
    open class func batchAttributeGetBatchOperationsQueueProgressWithRequestBuilder(batchId: Int) -> RequestBuilder<ResultModelOfBatchOperationsQueueInfo> {
        var localVariablePath = "/v1.2/batchAttribute/{batchId}/progress"
        let batchIdPreEscape = "\(APIHelper.mapValueToPathItem(batchId))"
        let batchIdPostEscape = batchIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{batchId}", with: batchIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfBatchOperationsQueueInfo>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает в виде в CSV-файла подробную информацию о пакетном обновлении атрубитов клиентов.
     
     - parameter batchId: (path) Внутренний идентификатор пакетного обновления атрибутов клиентов. 
     - parameter deferredOperationState: (query) Состояние, по которому будут отфильтрованы операции в пакетном обновлении (Created — создана, Completed — выполнена, Error — ошибка выполнения). 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchAttributeGetErrorOperationsCsv(batchId: Int, deferredOperationState: DeferredOperationState, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: String?, _ error: Error?) -> Void)) -> RequestTask {
        return batchAttributeGetErrorOperationsCsvWithRequestBuilder(batchId: batchId, deferredOperationState: deferredOperationState).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает в виде в CSV-файла подробную информацию о пакетном обновлении атрубитов клиентов.
     - GET /v1.2/batchAttribute/{batchId}/export
     - parameter batchId: (path) Внутренний идентификатор пакетного обновления атрибутов клиентов. 
     - parameter deferredOperationState: (query) Состояние, по которому будут отфильтрованы операции в пакетном обновлении (Created — создана, Completed — выполнена, Error — ошибка выполнения). 
     - returns: RequestBuilder<String> 
     */
    open class func batchAttributeGetErrorOperationsCsvWithRequestBuilder(batchId: Int, deferredOperationState: DeferredOperationState) -> RequestBuilder<String> {
        var localVariablePath = "/v1.2/batchAttribute/{batchId}/export"
        let batchIdPreEscape = "\(APIHelper.mapValueToPathItem(batchId))"
        let batchIdPostEscape = batchIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{batchId}", with: batchIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "deferredOperationState": deferredOperationState.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<String>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает историю пакетных обновлений атрибутов клиентов.
     
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter filterFromDate: (query) Дата, с которой необходимо вывести историю. (optional)
     - parameter filterToDate: (query) Дата, до которой необходимо вывести историю. (optional)
     - parameter filterCreatorGetAll: (query) Получить записи по всем авторам. (optional)
     - parameter filterCreatorCreatorId: (query) Идентификатор автора. (optional)
     - parameter filterState: (query) Состояние обработки операций. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchAttributeGetHistory(from: Int? = nil, count: Int? = nil, filterFromDate: String? = nil, filterToDate: String? = nil, filterCreatorGetAll: Bool? = nil, filterCreatorCreatorId: Int? = nil, filterState: BatchState? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfBatchAttributeUpdateModel?, _ error: Error?) -> Void)) -> RequestTask {
        return batchAttributeGetHistoryWithRequestBuilder(from: from, count: count, filterFromDate: filterFromDate, filterToDate: filterToDate, filterCreatorGetAll: filterCreatorGetAll, filterCreatorCreatorId: filterCreatorCreatorId, filterState: filterState).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает историю пакетных обновлений атрибутов клиентов.
     - GET /v1.2/batchAttribute
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter filterFromDate: (query) Дата, с которой необходимо вывести историю. (optional)
     - parameter filterToDate: (query) Дата, до которой необходимо вывести историю. (optional)
     - parameter filterCreatorGetAll: (query) Получить записи по всем авторам. (optional)
     - parameter filterCreatorCreatorId: (query) Идентификатор автора. (optional)
     - parameter filterState: (query) Состояние обработки операций. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfBatchAttributeUpdateModel> 
     */
    open class func batchAttributeGetHistoryWithRequestBuilder(from: Int? = nil, count: Int? = nil, filterFromDate: String? = nil, filterToDate: String? = nil, filterCreatorGetAll: Bool? = nil, filterCreatorCreatorId: Int? = nil, filterState: BatchState? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfBatchAttributeUpdateModel> {
        let localVariablePath = "/v1.2/batchAttribute"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "filter.fromDate": filterFromDate?.encodeToJSON(),
            "filter.toDate": filterToDate?.encodeToJSON(),
            "filter.creator.getAll": filterCreatorGetAll?.encodeToJSON(),
            "filter.creator.creatorId": filterCreatorCreatorId?.encodeToJSON(),
            "filter.state": filterState?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfBatchAttributeUpdateModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает подробную информацию о пакетном обновлении атрубитов клиентов.
     
     - parameter batchId: (path) Внутренний идентификатор пакетного обновления атрибутов клиентов. 
     - parameter deferredOperationState: (query) Состояние, по которому будут отфильтрованы операции в пакетном обновлении (Created — создана, Completed — выполнена, Error — ошибка выполнения). 
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchAttributeGetOperations(batchId: Int, deferredOperationState: DeferredOperationState, from: Int? = nil, count: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfOperationBatchAttributeUpdateModel?, _ error: Error?) -> Void)) -> RequestTask {
        return batchAttributeGetOperationsWithRequestBuilder(batchId: batchId, deferredOperationState: deferredOperationState, from: from, count: count).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает подробную информацию о пакетном обновлении атрубитов клиентов.
     - GET /v1.2/batchAttribute/{batchId}/operations
     - parameter batchId: (path) Внутренний идентификатор пакетного обновления атрибутов клиентов. 
     - parameter deferredOperationState: (query) Состояние, по которому будут отфильтрованы операции в пакетном обновлении (Created — создана, Completed — выполнена, Error — ошибка выполнения). 
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfOperationBatchAttributeUpdateModel> 
     */
    open class func batchAttributeGetOperationsWithRequestBuilder(batchId: Int, deferredOperationState: DeferredOperationState, from: Int? = nil, count: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfOperationBatchAttributeUpdateModel> {
        var localVariablePath = "/v1.2/batchAttribute/{batchId}/operations"
        let batchIdPreEscape = "\(APIHelper.mapValueToPathItem(batchId))"
        let batchIdPostEscape = batchIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{batchId}", with: batchIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "deferredOperationState": deferredOperationState.encodeToJSON(),
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfOperationBatchAttributeUpdateModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Запускает пакетное обновление значений атрибутов клиента, полученных из CSV-файла.
     
     - parameter description: (query) Описание файла. 
     - parameter supportEmptyString: (query) Необходимость установки вместо пустых значений атрибута значение \&quot;null\&quot; (true — да, false — нет). 
     - parameter file: (query) file to upload 
     - parameter preLoadValidationEnable: (query) Необходимость валидации данных перед обновлением атрибутов (true — да, false — нет). (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchAttributeUpdateAttributesFromCsv(description: String, supportEmptyString: Bool, file: URL, preLoadValidationEnable: Bool? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfInt32?, _ error: Error?) -> Void)) -> RequestTask {
        return batchAttributeUpdateAttributesFromCsvWithRequestBuilder(description: description, supportEmptyString: supportEmptyString, file: file, preLoadValidationEnable: preLoadValidationEnable).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Запускает пакетное обновление значений атрибутов клиента, полученных из CSV-файла.
     - PUT /v1.2/batchAttribute/updateCsv
     - parameter description: (query) Описание файла. 
     - parameter supportEmptyString: (query) Необходимость установки вместо пустых значений атрибута значение \&quot;null\&quot; (true — да, false — нет). 
     - parameter file: (query) file to upload 
     - parameter preLoadValidationEnable: (query) Необходимость валидации данных перед обновлением атрибутов (true — да, false — нет). (optional)
     - returns: RequestBuilder<ResultModelOfInt32> 
     */
    open class func batchAttributeUpdateAttributesFromCsvWithRequestBuilder(description: String, supportEmptyString: Bool, file: URL, preLoadValidationEnable: Bool? = nil) -> RequestBuilder<ResultModelOfInt32> {
        let localVariablePath = "/v1.2/batchAttribute/updateCsv"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "description": description.encodeToJSON(),
            "supportEmptyString": supportEmptyString.encodeToJSON(),
            "preLoadValidationEnable": preLoadValidationEnable?.encodeToJSON(),
            "file": file.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfInt32>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
