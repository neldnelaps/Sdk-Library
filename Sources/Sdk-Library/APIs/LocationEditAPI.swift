//
// LocationEditAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class LocationEditAPI {

    /**
     Добавляет новое местоположение.
     
     - parameter model: (query) Модель описания местоположения торговой точки. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func locationEditCreate(model: LocationDataModel, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfInt32?, _ error: Error?) -> Void)) -> RequestTask {
        return locationEditCreateWithRequestBuilder(model: model).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Добавляет новое местоположение.
     - PUT /v1.2/locations
     - parameter model: (query) Модель описания местоположения торговой точки. 
     - returns: RequestBuilder<ResultModelOfInt32> 
     */
    open class func locationEditCreateWithRequestBuilder(model: LocationDataModel) -> RequestBuilder<ResultModelOfInt32> {
        let localVariablePath = "/v1.2/locations"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "model": model.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfInt32>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает информацию о местоположении по внутреннему идентификатору.
     
     - parameter id: (path) Внутренний идентификатор местоположения. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func locationEditGet(id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfLocationDataModel?, _ error: Error?) -> Void)) -> RequestTask {
        return locationEditGetWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о местоположении по внутреннему идентификатору.
     - GET /v1.2/locations/{id}
     - parameter id: (path) Внутренний идентификатор местоположения. 
     - returns: RequestBuilder<ResultModelOfLocationDataModel> 
     */
    open class func locationEditGetWithRequestBuilder(id: Int) -> RequestBuilder<ResultModelOfLocationDataModel> {
        var localVariablePath = "/v1.2/locations/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfLocationDataModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает информацию о местоположении по внешнему идентификатору.
     
     - parameter uid: (path) Внешний идентификатор местоположения. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func locationEditGetByUid(uid: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfLocationDataModel?, _ error: Error?) -> Void)) -> RequestTask {
        return locationEditGetByUidWithRequestBuilder(uid: uid).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о местоположении по внешнему идентификатору.
     - GET /v1.2/locations/{uid}
     - parameter uid: (path) Внешний идентификатор местоположения. 
     - returns: RequestBuilder<ResultModelOfLocationDataModel> 
     */
    open class func locationEditGetByUidWithRequestBuilder(uid: String) -> RequestBuilder<ResultModelOfLocationDataModel> {
        var localVariablePath = "/v1.2/locations/{uid}"
        let uidPreEscape = "\(APIHelper.mapValueToPathItem(uid))"
        let uidPostEscape = uidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{uid}", with: uidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfLocationDataModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить список городов.
     
     - parameter startWith: (query) Поисковая строка. (optional)
     - parameter count: (query) Кол-во выводимых элементов. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func locationEditGetCities(startWith: String? = nil, count: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfString?, _ error: Error?) -> Void)) -> RequestTask {
        return locationEditGetCitiesWithRequestBuilder(startWith: startWith, count: count).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить список городов.
     - GET /v1.2/locations/CitiesStartWith
     - parameter startWith: (query) Поисковая строка. (optional)
     - parameter count: (query) Кол-во выводимых элементов. (optional)
     - returns: RequestBuilder<ResultModelOfListOfString> 
     */
    open class func locationEditGetCitiesWithRequestBuilder(startWith: String? = nil, count: Int? = nil) -> RequestBuilder<ResultModelOfListOfString> {
        let localVariablePath = "/v1.2/locations/CitiesStartWith"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "startWith": startWith?.encodeToJSON(),
            "count": count?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfString>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить список городов.
     
     - parameter regionId: (path) Id региона. 
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func locationEditGetCitiesByRegionId(regionId: Int, from: Int? = nil, count: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfCityViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return locationEditGetCitiesByRegionIdWithRequestBuilder(regionId: regionId, from: from, count: count).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить список городов.
     - GET /v1.2/locations/Region/{regionId}/Cities
     - parameter regionId: (path) Id региона. 
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfCityViewModel> 
     */
    open class func locationEditGetCitiesByRegionIdWithRequestBuilder(regionId: Int, from: Int? = nil, count: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfCityViewModel> {
        var localVariablePath = "/v1.2/locations/Region/{regionId}/Cities"
        let regionIdPreEscape = "\(APIHelper.mapValueToPathItem(regionId))"
        let regionIdPostEscape = regionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{regionId}", with: regionIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfCityViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить список стран.
     
     - parameter filterFrom: (query) Начало выборки. (optional)
     - parameter filterCount: (query) Количество. (optional)
     - parameter filterStartWith: (query) Поисковая строка. (optional)
     - parameter filterSortingIds: (query) Идентификаторы стран, которые будут выбираться первыми. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func locationEditGetCountries(filterFrom: Int? = nil, filterCount: Int? = nil, filterStartWith: String? = nil, filterSortingIds: [Int]? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfCountryViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return locationEditGetCountriesWithRequestBuilder(filterFrom: filterFrom, filterCount: filterCount, filterStartWith: filterStartWith, filterSortingIds: filterSortingIds).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить список стран.
     - GET /v1.2/locations/Countries
     - parameter filterFrom: (query) Начало выборки. (optional)
     - parameter filterCount: (query) Количество. (optional)
     - parameter filterStartWith: (query) Поисковая строка. (optional)
     - parameter filterSortingIds: (query) Идентификаторы стран, которые будут выбираться первыми. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfCountryViewModel> 
     */
    open class func locationEditGetCountriesWithRequestBuilder(filterFrom: Int? = nil, filterCount: Int? = nil, filterStartWith: String? = nil, filterSortingIds: [Int]? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfCountryViewModel> {
        let localVariablePath = "/v1.2/locations/Countries"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "filter.from": filterFrom?.encodeToJSON(),
            "filter.count": filterCount?.encodeToJSON(),
            "filter.startWith": filterStartWith?.encodeToJSON(),
            "filter.sortingIds": filterSortingIds?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfCountryViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить список домов.
     
     - parameter startWith: (query) С какого элемента выводить. (optional)
     - parameter count: (query) Кол-во выводимых элементов. (optional)
     - parameter street: (query) Фильтр по улице. (optional)
     - parameter city: (query) Название города. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func locationEditGetHouses(startWith: String? = nil, count: Int? = nil, street: String? = nil, city: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfString?, _ error: Error?) -> Void)) -> RequestTask {
        return locationEditGetHousesWithRequestBuilder(startWith: startWith, count: count, street: street, city: city).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить список домов.
     - GET /v1.2/locations/Houses
     - parameter startWith: (query) С какого элемента выводить. (optional)
     - parameter count: (query) Кол-во выводимых элементов. (optional)
     - parameter street: (query) Фильтр по улице. (optional)
     - parameter city: (query) Название города. (optional)
     - returns: RequestBuilder<ResultModelOfListOfString> 
     */
    open class func locationEditGetHousesWithRequestBuilder(startWith: String? = nil, count: Int? = nil, street: String? = nil, city: String? = nil) -> RequestBuilder<ResultModelOfListOfString> {
        let localVariablePath = "/v1.2/locations/Houses"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "startWith": startWith?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "street": street?.encodeToJSON(),
            "city": city?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfString>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает список населенных пунктов.
     
     - parameter startSubstr: (query) Подстрока для поиска по названию населенного пункта. (optional)
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter regionName: (query) Название региона. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func locationEditGetLocationsCities(startSubstr: String? = nil, from: Int? = nil, count: Int? = nil, regionName: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfCityDataModel?, _ error: Error?) -> Void)) -> RequestTask {
        return locationEditGetLocationsCitiesWithRequestBuilder(startSubstr: startSubstr, from: from, count: count, regionName: regionName).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает список населенных пунктов.
     - GET /v1.2/locations/Cities
     - parameter startSubstr: (query) Подстрока для поиска по названию населенного пункта. (optional)
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter regionName: (query) Название региона. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfCityDataModel> 
     */
    open class func locationEditGetLocationsCitiesWithRequestBuilder(startSubstr: String? = nil, from: Int? = nil, count: Int? = nil, regionName: String? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfCityDataModel> {
        let localVariablePath = "/v1.2/locations/Cities"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "startSubstr": startSubstr?.encodeToJSON(),
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "regionName": regionName?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfCityDataModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить список регионов.
     
     - parameter startWith: (query) Поисковая строка. (optional)
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func locationEditGetRegions(startWith: String? = nil, from: Int? = nil, count: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfRegionViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return locationEditGetRegionsWithRequestBuilder(startWith: startWith, from: from, count: count).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить список регионов.
     - GET /v1.2/locations/Regions
     - parameter startWith: (query) Поисковая строка. (optional)
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfRegionViewModel> 
     */
    open class func locationEditGetRegionsWithRequestBuilder(startWith: String? = nil, from: Int? = nil, count: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfRegionViewModel> {
        let localVariablePath = "/v1.2/locations/Regions"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "startWith": startWith?.encodeToJSON(),
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfRegionViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить список улиц.
     
     - parameter startWith: (query) С какого элемента выводить. (optional)
     - parameter count: (query) Кол-во выводимых элементов. (optional)
     - parameter city: (query) Фильтр по городу. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func locationEditGetStreets(startWith: String? = nil, count: Int? = nil, city: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfString?, _ error: Error?) -> Void)) -> RequestTask {
        return locationEditGetStreetsWithRequestBuilder(startWith: startWith, count: count, city: city).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить список улиц.
     - GET /v1.2/locations/Streets
     - parameter startWith: (query) С какого элемента выводить. (optional)
     - parameter count: (query) Кол-во выводимых элементов. (optional)
     - parameter city: (query) Фильтр по городу. (optional)
     - returns: RequestBuilder<ResultModelOfListOfString> 
     */
    open class func locationEditGetStreetsWithRequestBuilder(startWith: String? = nil, count: Int? = nil, city: String? = nil) -> RequestBuilder<ResultModelOfListOfString> {
        let localVariablePath = "/v1.2/locations/Streets"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "startWith": startWith?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "city": city?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfString>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
