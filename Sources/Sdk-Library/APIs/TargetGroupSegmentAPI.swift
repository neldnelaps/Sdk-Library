//
// TargetGroupSegmentAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class TargetGroupSegmentAPI {

    /**
     Запускает расчет сегмента целевой аудитории.
     
     - parameter targetGroupId: (path) Внутренний идентификатор целевой аудитории. 
     - parameter segmentId: (path) Внутренний идентификатор сегмента. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func targetGroupSegmentCalculateTargetGroupSegment(targetGroupId: Int, segmentId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModel?, _ error: Error?) -> Void)) -> RequestTask {
        return targetGroupSegmentCalculateTargetGroupSegmentWithRequestBuilder(targetGroupId: targetGroupId, segmentId: segmentId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Запускает расчет сегмента целевой аудитории.
     - POST /v1.2/targetGroups/{targetGroupId}/segments/{segmentId}/calculate
     - parameter targetGroupId: (path) Внутренний идентификатор целевой аудитории. 
     - parameter segmentId: (path) Внутренний идентификатор сегмента. 
     - returns: RequestBuilder<ResultModel> 
     */
    open class func targetGroupSegmentCalculateTargetGroupSegmentWithRequestBuilder(targetGroupId: Int, segmentId: Int) -> RequestBuilder<ResultModel> {
        var localVariablePath = "/v1.2/targetGroups/{targetGroupId}/segments/{segmentId}/calculate"
        let targetGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(targetGroupId))"
        let targetGroupIdPostEscape = targetGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{targetGroupId}", with: targetGroupIdPostEscape, options: .literal, range: nil)
        let segmentIdPreEscape = "\(APIHelper.mapValueToPathItem(segmentId))"
        let segmentIdPostEscape = segmentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{segmentId}", with: segmentIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает сегмент целевой аудитории по его внутреннему идентификатору.
     
     - parameter targetGroupId: (path) Внутренний идентификатор целевой аудитории. 
     - parameter id: (path) Внутренний идентификатор сегмента. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func targetGroupSegmentGetTargetGroupSegment(targetGroupId: Int, id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfTargetGroupSegmentViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return targetGroupSegmentGetTargetGroupSegmentWithRequestBuilder(targetGroupId: targetGroupId, id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает сегмент целевой аудитории по его внутреннему идентификатору.
     - GET /v1.2/targetGroups/{targetGroupId}/segments/{id}
     - parameter targetGroupId: (path) Внутренний идентификатор целевой аудитории. 
     - parameter id: (path) Внутренний идентификатор сегмента. 
     - returns: RequestBuilder<ResultModelOfTargetGroupSegmentViewModel> 
     */
    open class func targetGroupSegmentGetTargetGroupSegmentWithRequestBuilder(targetGroupId: Int, id: Int) -> RequestBuilder<ResultModelOfTargetGroupSegmentViewModel> {
        var localVariablePath = "/v1.2/targetGroups/{targetGroupId}/segments/{id}"
        let targetGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(targetGroupId))"
        let targetGroupIdPostEscape = targetGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{targetGroupId}", with: targetGroupIdPostEscape, options: .literal, range: nil)
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfTargetGroupSegmentViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает информацию о последнем расчете сегмента целевой аудитории.
     
     - parameter targetGroupId: (path) Внутренний идентификатор целевой аудитории. 
     - parameter segmentId: (path) Внутренний идентификатор сегмента. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func targetGroupSegmentGetTargetGroupSegmentCalculationInfo(targetGroupId: Int, segmentId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfCalculationModel?, _ error: Error?) -> Void)) -> RequestTask {
        return targetGroupSegmentGetTargetGroupSegmentCalculationInfoWithRequestBuilder(targetGroupId: targetGroupId, segmentId: segmentId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о последнем расчете сегмента целевой аудитории.
     - GET /v1.2/targetGroups/{targetGroupId}/segments/{segmentId}/calculation
     - parameter targetGroupId: (path) Внутренний идентификатор целевой аудитории. 
     - parameter segmentId: (path) Внутренний идентификатор сегмента. 
     - returns: RequestBuilder<ResultModelOfCalculationModel> 
     */
    open class func targetGroupSegmentGetTargetGroupSegmentCalculationInfoWithRequestBuilder(targetGroupId: Int, segmentId: Int) -> RequestBuilder<ResultModelOfCalculationModel> {
        var localVariablePath = "/v1.2/targetGroups/{targetGroupId}/segments/{segmentId}/calculation"
        let targetGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(targetGroupId))"
        let targetGroupIdPostEscape = targetGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{targetGroupId}", with: targetGroupIdPostEscape, options: .literal, range: nil)
        let segmentIdPreEscape = "\(APIHelper.mapValueToPathItem(segmentId))"
        let segmentIdPostEscape = segmentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{segmentId}", with: segmentIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfCalculationModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает все сегменты целевой аудитории.
     
     - parameter targetGroupId: (path) Внутренний идентификатор целевой аудитории. 
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func targetGroupSegmentGetTargetGroupSegments(targetGroupId: Int, from: Int? = nil, count: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfTargetGroupSegmentViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return targetGroupSegmentGetTargetGroupSegmentsWithRequestBuilder(targetGroupId: targetGroupId, from: from, count: count).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает все сегменты целевой аудитории.
     - GET /v1.2/targetGroups/{targetGroupId}/segments
     - parameter targetGroupId: (path) Внутренний идентификатор целевой аудитории. 
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfTargetGroupSegmentViewModel> 
     */
    open class func targetGroupSegmentGetTargetGroupSegmentsWithRequestBuilder(targetGroupId: Int, from: Int? = nil, count: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfTargetGroupSegmentViewModel> {
        var localVariablePath = "/v1.2/targetGroups/{targetGroupId}/segments"
        let targetGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(targetGroupId))"
        let targetGroupIdPostEscape = targetGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{targetGroupId}", with: targetGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfTargetGroupSegmentViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Обновляет сегмент целевой аудитории.
     
     - parameter targetGroupId: (path) Внутренний идентификатор целевой аудитории. 
     - parameter segmentId: (path) Внутренний идентификатор сегмента. 
     - parameter model: (query) Модель сегмента. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func targetGroupSegmentUpdateTargetGroupSegment(targetGroupId: Int, segmentId: Int, model: TargetGroupSegmentModel, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModel?, _ error: Error?) -> Void)) -> RequestTask {
        return targetGroupSegmentUpdateTargetGroupSegmentWithRequestBuilder(targetGroupId: targetGroupId, segmentId: segmentId, model: model).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Обновляет сегмент целевой аудитории.
     - POST /v1.2/targetGroups/{targetGroupId}/segments/{segmentId}
     - parameter targetGroupId: (path) Внутренний идентификатор целевой аудитории. 
     - parameter segmentId: (path) Внутренний идентификатор сегмента. 
     - parameter model: (query) Модель сегмента. 
     - returns: RequestBuilder<ResultModel> 
     */
    open class func targetGroupSegmentUpdateTargetGroupSegmentWithRequestBuilder(targetGroupId: Int, segmentId: Int, model: TargetGroupSegmentModel) -> RequestBuilder<ResultModel> {
        var localVariablePath = "/v1.2/targetGroups/{targetGroupId}/segments/{segmentId}"
        let targetGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(targetGroupId))"
        let targetGroupIdPostEscape = targetGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{targetGroupId}", with: targetGroupIdPostEscape, options: .literal, range: nil)
        let segmentIdPreEscape = "\(APIHelper.mapValueToPathItem(segmentId))"
        let segmentIdPostEscape = segmentIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{segmentId}", with: segmentIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "model": model.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
