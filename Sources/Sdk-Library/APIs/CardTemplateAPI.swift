//
// CardTemplateAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class CardTemplateAPI {

    /**

     - parameter filterName: (query)  (optional)
     - parameter filterIsDeleted: (query)  (optional)
     - parameter filterFrom: (query)  (optional)
     - parameter filterCount: (query)  (optional)
     - parameter filterLoyaltyProgramsIds: (query)  (optional)
     - parameter filterPartnersIds: (query)  (optional)
     - parameter filterAuthorsIds: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func cardTemplateGetTemplateSets(filterName: String? = nil, filterIsDeleted: Bool? = nil, filterFrom: Int? = nil, filterCount: Int? = nil, filterLoyaltyProgramsIds: [Int]? = nil, filterPartnersIds: [Int]? = nil, filterAuthorsIds: [Int]? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfTemplateSetModel?, _ error: Error?) -> Void)) -> RequestTask {
        return cardTemplateGetTemplateSetsWithRequestBuilder(filterName: filterName, filterIsDeleted: filterIsDeleted, filterFrom: filterFrom, filterCount: filterCount, filterLoyaltyProgramsIds: filterLoyaltyProgramsIds, filterPartnersIds: filterPartnersIds, filterAuthorsIds: filterAuthorsIds).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /v1.2/Cards/template/sets
     - parameter filterName: (query)  (optional)
     - parameter filterIsDeleted: (query)  (optional)
     - parameter filterFrom: (query)  (optional)
     - parameter filterCount: (query)  (optional)
     - parameter filterLoyaltyProgramsIds: (query)  (optional)
     - parameter filterPartnersIds: (query)  (optional)
     - parameter filterAuthorsIds: (query)  (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfTemplateSetModel> 
     */
    open class func cardTemplateGetTemplateSetsWithRequestBuilder(filterName: String? = nil, filterIsDeleted: Bool? = nil, filterFrom: Int? = nil, filterCount: Int? = nil, filterLoyaltyProgramsIds: [Int]? = nil, filterPartnersIds: [Int]? = nil, filterAuthorsIds: [Int]? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfTemplateSetModel> {
        let localVariablePath = "/v1.2/Cards/template/sets"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "filter.name": filterName?.encodeToJSON(),
            "filter.isDeleted": filterIsDeleted?.encodeToJSON(),
            "filter.from": filterFrom?.encodeToJSON(),
            "filter.count": filterCount?.encodeToJSON(),
            "filter.loyaltyProgramsIds": filterLoyaltyProgramsIds?.encodeToJSON(),
            "filter.partnersIds": filterPartnersIds?.encodeToJSON(),
            "filter.authorsIds": filterAuthorsIds?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfTemplateSetModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter id: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func cardTemplateGetTemplates(id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfTemplateSetModel?, _ error: Error?) -> Void)) -> RequestTask {
        return cardTemplateGetTemplatesWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /v1.2/Cards/template/sets/{id}
     - parameter id: (path)  
     - returns: RequestBuilder<ResultModelOfTemplateSetModel> 
     */
    open class func cardTemplateGetTemplatesWithRequestBuilder(id: Int) -> RequestBuilder<ResultModelOfTemplateSetModel> {
        var localVariablePath = "/v1.2/Cards/template/sets/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfTemplateSetModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
