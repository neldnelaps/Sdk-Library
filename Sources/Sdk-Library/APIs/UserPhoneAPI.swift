//
// UserPhoneAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class UserPhoneAPI {

    /**
     Отменяет процесс привязки номера телефона.
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func userPhoneChangePhoneCancel(apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModel?, _ error: Error?) -> Void)) -> RequestTask {
        return userPhoneChangePhoneCancelWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Отменяет процесс привязки номера телефона.
     - POST /v1.2/User/PhoneNumber/CancelChange
     - returns: RequestBuilder<ResultModel> 
     */
    open class func userPhoneChangePhoneCancelWithRequestBuilder() -> RequestBuilder<ResultModel> {
        let localVariablePath = "/v1.2/User/PhoneNumber/CancelChange"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает информацию о номере телефона клиента.
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func userPhoneGetPhone(apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfUserPhoneNumberInfo?, _ error: Error?) -> Void)) -> RequestTask {
        return userPhoneGetPhoneWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о номере телефона клиента.
     - GET /v1.2/User/PhoneNumber
     - returns: RequestBuilder<ResultModelOfUserPhoneNumberInfo> 
     */
    open class func userPhoneGetPhoneWithRequestBuilder() -> RequestBuilder<ResultModelOfUserPhoneNumberInfo> {
        let localVariablePath = "/v1.2/User/PhoneNumber"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfUserPhoneNumberInfo>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Завершает процесс привязки номера телефона.
     
     - parameter confirmCode: (query) Ввод кода подтверждения для привязки нового номера телефона. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func userPhonePostPhoneConfirmCode(confirmCode: PostConfirmCodeModel, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfAuthResultModel?, _ error: Error?) -> Void)) -> RequestTask {
        return userPhonePostPhoneConfirmCodeWithRequestBuilder(confirmCode: confirmCode).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Завершает процесс привязки номера телефона.
     - POST /v1.2/User/PhoneNumber/Confirm
     - parameter confirmCode: (query) Ввод кода подтверждения для привязки нового номера телефона. 
     - returns: RequestBuilder<ResultModelOfAuthResultModel> 
     */
    open class func userPhonePostPhoneConfirmCodeWithRequestBuilder(confirmCode: PostConfirmCodeModel) -> RequestBuilder<ResultModelOfAuthResultModel> {
        let localVariablePath = "/v1.2/User/PhoneNumber/Confirm"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "confirmCode": confirmCode.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfAuthResultModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Повторно отправляет код подтверждения на новый номер телефона.
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func userPhoneSendPhoneConfirmCode(apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModel?, _ error: Error?) -> Void)) -> RequestTask {
        return userPhoneSendPhoneConfirmCodeWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Повторно отправляет код подтверждения на новый номер телефона.
     - POST /v1.2/User/PhoneNumber/SendConfirmCode
     - returns: RequestBuilder<ResultModel> 
     */
    open class func userPhoneSendPhoneConfirmCodeWithRequestBuilder() -> RequestBuilder<ResultModel> {
        let localVariablePath = "/v1.2/User/PhoneNumber/SendConfirmCode"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
