//
// PermissionsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class PermissionsAPI {

    /**
     Получить все разрешения.
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func permissionsGetAll(apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfPermissionViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return permissionsGetAllWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить все разрешения.
     - GET /v1.2/permissions
     - returns: RequestBuilder<ResultModelOfListOfPermissionViewModel> 
     */
    open class func permissionsGetAllWithRequestBuilder() -> RequestBuilder<ResultModelOfListOfPermissionViewModel> {
        let localVariablePath = "/v1.2/permissions"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfPermissionViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить разрешения текущего пользователя.
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func permissionsGetPermissionsForCurrentPerson(apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfString?, _ error: Error?) -> Void)) -> RequestTask {
        return permissionsGetPermissionsForCurrentPersonWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить разрешения текущего пользователя.
     - GET /v1.2/user/permissions
     - returns: RequestBuilder<ResultModelOfListOfString> 
     */
    open class func permissionsGetPermissionsForCurrentPersonWithRequestBuilder() -> RequestBuilder<ResultModelOfListOfString> {
        let localVariablePath = "/v1.2/user/permissions"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfString>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Определяет, имеет ли текущий пользователь указанное разрешение для заданного партнера.
     
     - parameter permission: (query) Разрешение. 
     - parameter partnerId: (query) ID партнера. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func permissionsHasPermission(permission: String, partnerId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfBoolean?, _ error: Error?) -> Void)) -> RequestTask {
        return permissionsHasPermissionWithRequestBuilder(permission: permission, partnerId: partnerId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Определяет, имеет ли текущий пользователь указанное разрешение для заданного партнера.
     - GET /v1.2/user/permission
     - parameter permission: (query) Разрешение. 
     - parameter partnerId: (query) ID партнера. 
     - returns: RequestBuilder<ResultModelOfBoolean> 
     */
    open class func permissionsHasPermissionWithRequestBuilder(permission: String, partnerId: Int) -> RequestBuilder<ResultModelOfBoolean> {
        let localVariablePath = "/v1.2/user/permission"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "permission": permission.encodeToJSON(),
            "partnerId": partnerId.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfBoolean>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
