//
// LimitActionAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class LimitActionAPI {

    /**
     Получить действие для конкретной границы правила.
     
     - parameter ruleId: (path) Идентификатор правила. 
     - parameter borderId: (path) Идентификатор границы. 
     - parameter actionId: (path) Идентификатор действия. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func limitActionGetAction(ruleId: Int, borderId: Int, actionId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfLimitActionViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return limitActionGetActionWithRequestBuilder(ruleId: ruleId, borderId: borderId, actionId: actionId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить действие для конкретной границы правила.
     - GET /v1.2/LimitRules/{ruleId}/Borders/{borderId}/Actions/{actionId}
     - parameter ruleId: (path) Идентификатор правила. 
     - parameter borderId: (path) Идентификатор границы. 
     - parameter actionId: (path) Идентификатор действия. 
     - returns: RequestBuilder<ResultModelOfLimitActionViewModel> 
     */
    open class func limitActionGetActionWithRequestBuilder(ruleId: Int, borderId: Int, actionId: Int) -> RequestBuilder<ResultModelOfLimitActionViewModel> {
        var localVariablePath = "/v1.2/LimitRules/{ruleId}/Borders/{borderId}/Actions/{actionId}"
        let ruleIdPreEscape = "\(APIHelper.mapValueToPathItem(ruleId))"
        let ruleIdPostEscape = ruleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ruleId}", with: ruleIdPostEscape, options: .literal, range: nil)
        let borderIdPreEscape = "\(APIHelper.mapValueToPathItem(borderId))"
        let borderIdPostEscape = borderIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{borderId}", with: borderIdPostEscape, options: .literal, range: nil)
        let actionIdPreEscape = "\(APIHelper.mapValueToPathItem(actionId))"
        let actionIdPostEscape = actionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{actionId}", with: actionIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfLimitActionViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить список действий.
     
     - parameter ruleId: (path) Идентификатор правила. 
     - parameter borderId: (path) Идентификатор границы. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func limitActionGetActions(ruleId: Int, borderId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfLimitActionViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return limitActionGetActionsWithRequestBuilder(ruleId: ruleId, borderId: borderId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить список действий.
     - GET /v1.2/LimitRules/{ruleId}/Borders/{borderId}/Actions
     - parameter ruleId: (path) Идентификатор правила. 
     - parameter borderId: (path) Идентификатор границы. 
     - returns: RequestBuilder<ResultModelOfListOfLimitActionViewModel> 
     */
    open class func limitActionGetActionsWithRequestBuilder(ruleId: Int, borderId: Int) -> RequestBuilder<ResultModelOfListOfLimitActionViewModel> {
        var localVariablePath = "/v1.2/LimitRules/{ruleId}/Borders/{borderId}/Actions"
        let ruleIdPreEscape = "\(APIHelper.mapValueToPathItem(ruleId))"
        let ruleIdPostEscape = ruleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ruleId}", with: ruleIdPostEscape, options: .literal, range: nil)
        let borderIdPreEscape = "\(APIHelper.mapValueToPathItem(borderId))"
        let borderIdPostEscape = borderIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{borderId}", with: borderIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfLimitActionViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Восстановление действия.
     
     - parameter ruleId: (path) Идентификатор правила. 
     - parameter borderId: (path) Идентификатор границы. 
     - parameter actionId: (path) Идентификатор действия. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func limitActionRestoreAction(ruleId: Int, borderId: Int, actionId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModel?, _ error: Error?) -> Void)) -> RequestTask {
        return limitActionRestoreActionWithRequestBuilder(ruleId: ruleId, borderId: borderId, actionId: actionId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Восстановление действия.
     - POST /v1.2/LimitRules/{ruleId}/Borders/{borderId}/Actions/{actionId}/Restore
     - parameter ruleId: (path) Идентификатор правила. 
     - parameter borderId: (path) Идентификатор границы. 
     - parameter actionId: (path) Идентификатор действия. 
     - returns: RequestBuilder<ResultModel> 
     */
    open class func limitActionRestoreActionWithRequestBuilder(ruleId: Int, borderId: Int, actionId: Int) -> RequestBuilder<ResultModel> {
        var localVariablePath = "/v1.2/LimitRules/{ruleId}/Borders/{borderId}/Actions/{actionId}/Restore"
        let ruleIdPreEscape = "\(APIHelper.mapValueToPathItem(ruleId))"
        let ruleIdPostEscape = ruleIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{ruleId}", with: ruleIdPostEscape, options: .literal, range: nil)
        let borderIdPreEscape = "\(APIHelper.mapValueToPathItem(borderId))"
        let borderIdPostEscape = borderIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{borderId}", with: borderIdPostEscape, options: .literal, range: nil)
        let actionIdPreEscape = "\(APIHelper.mapValueToPathItem(actionId))"
        let actionIdPostEscape = actionIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{actionId}", with: actionIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
