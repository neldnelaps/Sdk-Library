//
// GoodsGroupCatalogAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class GoodsGroupCatalogAPI {

    /**
     Получить иерархию дерева каталога товаров от корневого элемента до отфильтрованных по атрибуту и строке поиска.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора. 
     - parameter attributeFilterId: (path) Id фильтра по атрибуту. 
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter filterSearchedText: (query) Значение параметра товара. (optional)
     - parameter filterSearchParameter: (query) Параметр товара, по которому выполняется поиск (Name - название, ItemID - внутренний идентификатор, BarCode - штрихкод). (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupCatalogGetCatalogHierarchyToFilteredAttributeCatalogItems(goodsGroupId: Int, goodsSetId: Int, attributeFilterId: Int, from: Int? = nil, count: Int? = nil, filterSearchedText: String? = nil, filterSearchParameter: GoodsCatalogSearchParameter? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupCatalogGetCatalogHierarchyToFilteredAttributeCatalogItemsWithRequestBuilder(goodsGroupId: goodsGroupId, goodsSetId: goodsSetId, attributeFilterId: attributeFilterId, from: from, count: count, filterSearchedText: filterSearchedText, filterSearchParameter: filterSearchParameter).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить иерархию дерева каталога товаров от корневого элемента до отфильтрованных по атрибуту и строке поиска.
     - GET /v1.2/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/attributeFilter/{attributeFilterId}/catalog/search
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора. 
     - parameter attributeFilterId: (path) Id фильтра по атрибуту. 
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter filterSearchedText: (query) Значение параметра товара. (optional)
     - parameter filterSearchParameter: (query) Параметр товара, по которому выполняется поиск (Name - название, ItemID - внутренний идентификатор, BarCode - штрихкод). (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> 
     */
    open class func goodsGroupCatalogGetCatalogHierarchyToFilteredAttributeCatalogItemsWithRequestBuilder(goodsGroupId: Int, goodsSetId: Int, attributeFilterId: Int, from: Int? = nil, count: Int? = nil, filterSearchedText: String? = nil, filterSearchParameter: GoodsCatalogSearchParameter? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/attributeFilter/{attributeFilterId}/catalog/search"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let goodsSetIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsSetId))"
        let goodsSetIdPostEscape = goodsSetIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsSetId}", with: goodsSetIdPostEscape, options: .literal, range: nil)
        let attributeFilterIdPreEscape = "\(APIHelper.mapValueToPathItem(attributeFilterId))"
        let attributeFilterIdPostEscape = attributeFilterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{attributeFilterId}", with: attributeFilterIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "filter.searchedText": filterSearchedText?.encodeToJSON(),
            "filter.searchParameter": filterSearchParameter?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить иерархию дерева каталога товаров от корневого элемента до отфильтрованных по атрибутам и фильтру.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора товаров. 
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter filterSearchedText: (query) Значение параметра товара. (optional)
     - parameter filterSearchParameter: (query) Параметр товара, по которому выполняется поиск (Name - название, ItemID - внутренний идентификатор, BarCode - штрихкод). (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupCatalogGetCatalogHierarchyToFilteredAttributesCatalogItems(goodsGroupId: Int, goodsSetId: Int, from: Int? = nil, count: Int? = nil, filterSearchedText: String? = nil, filterSearchParameter: GoodsCatalogSearchParameter? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupCatalogGetCatalogHierarchyToFilteredAttributesCatalogItemsWithRequestBuilder(goodsGroupId: goodsGroupId, goodsSetId: goodsSetId, from: from, count: count, filterSearchedText: filterSearchedText, filterSearchParameter: filterSearchParameter).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить иерархию дерева каталога товаров от корневого элемента до отфильтрованных по атрибутам и фильтру.
     - GET /v1.2/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/filteredCatalog/search
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора товаров. 
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter filterSearchedText: (query) Значение параметра товара. (optional)
     - parameter filterSearchParameter: (query) Параметр товара, по которому выполняется поиск (Name - название, ItemID - внутренний идентификатор, BarCode - штрихкод). (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> 
     */
    open class func goodsGroupCatalogGetCatalogHierarchyToFilteredAttributesCatalogItemsWithRequestBuilder(goodsGroupId: Int, goodsSetId: Int, from: Int? = nil, count: Int? = nil, filterSearchedText: String? = nil, filterSearchParameter: GoodsCatalogSearchParameter? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/filteredCatalog/search"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let goodsSetIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsSetId))"
        let goodsSetIdPostEscape = goodsSetIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsSetId}", with: goodsSetIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "filter.searchedText": filterSearchedText?.encodeToJSON(),
            "filter.searchParameter": filterSearchParameter?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить иерархию дерева каталога товаров от корневого элемента до отфильтрованных.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора. 
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter sortParameter: (query) Параметр сортировки. (optional)
     - parameter filterSearchedText: (query) Значение параметра товара. (optional)
     - parameter filterSearchParameter: (query) Параметр товара, по которому выполняется поиск (Name - название, ItemID - внутренний идентификатор, BarCode - штрихкод). (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupCatalogGetCatalogHierarchyToFilteredCatalogItems(goodsGroupId: Int, goodsSetId: Int, from: Int? = nil, count: Int? = nil, sortParameter: GoodsCatalogSortParameter? = nil, filterSearchedText: String? = nil, filterSearchParameter: GoodsCatalogSearchParameter? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupCatalogGetCatalogHierarchyToFilteredCatalogItemsWithRequestBuilder(goodsGroupId: goodsGroupId, goodsSetId: goodsSetId, from: from, count: count, sortParameter: sortParameter, filterSearchedText: filterSearchedText, filterSearchParameter: filterSearchParameter).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить иерархию дерева каталога товаров от корневого элемента до отфильтрованных.
     - GET /v1.2/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/catalog/search
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора. 
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter sortParameter: (query) Параметр сортировки. (optional)
     - parameter filterSearchedText: (query) Значение параметра товара. (optional)
     - parameter filterSearchParameter: (query) Параметр товара, по которому выполняется поиск (Name - название, ItemID - внутренний идентификатор, BarCode - штрихкод). (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> 
     */
    open class func goodsGroupCatalogGetCatalogHierarchyToFilteredCatalogItemsWithRequestBuilder(goodsGroupId: Int, goodsSetId: Int, from: Int? = nil, count: Int? = nil, sortParameter: GoodsCatalogSortParameter? = nil, filterSearchedText: String? = nil, filterSearchParameter: GoodsCatalogSearchParameter? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/catalog/search"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let goodsSetIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsSetId))"
        let goodsSetIdPostEscape = goodsSetIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsSetId}", with: goodsSetIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "sortParameter": sortParameter?.encodeToJSON(),
            "filter.searchedText": filterSearchedText?.encodeToJSON(),
            "filter.searchParameter": filterSearchParameter?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить иерархию каталога товаров от корневого элемента до отфильтрованных, зафиксированных.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter filterSearchedText: (query) Значение параметра товара. (optional)
     - parameter filterSearchParameter: (query) Параметр товара, по которому выполняется поиск (Name - название, ItemID - внутренний идентификатор, BarCode - штрихкод). (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupCatalogGetCatalogHierarchyToFilteredFixedCatalogItems(goodsGroupId: Int, from: Int? = nil, count: Int? = nil, filterSearchedText: String? = nil, filterSearchParameter: GoodsCatalogSearchParameter? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupCatalogGetCatalogHierarchyToFilteredFixedCatalogItemsWithRequestBuilder(goodsGroupId: goodsGroupId, from: from, count: count, filterSearchedText: filterSearchedText, filterSearchParameter: filterSearchParameter).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить иерархию каталога товаров от корневого элемента до отфильтрованных, зафиксированных.
     - GET /v1.2/goodsGroups/{goodsGroupId}/fixedCatalog/search
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter filterSearchedText: (query) Значение параметра товара. (optional)
     - parameter filterSearchParameter: (query) Параметр товара, по которому выполняется поиск (Name - название, ItemID - внутренний идентификатор, BarCode - штрихкод). (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> 
     */
    open class func goodsGroupCatalogGetCatalogHierarchyToFilteredFixedCatalogItemsWithRequestBuilder(goodsGroupId: Int, from: Int? = nil, count: Int? = nil, filterSearchedText: String? = nil, filterSearchParameter: GoodsCatalogSearchParameter? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/fixedCatalog/search"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "filter.searchedText": filterSearchedText?.encodeToJSON(),
            "filter.searchParameter": filterSearchParameter?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить иерархию каталога товаров от корневого элемента до отфильтрованных, состоящих в группе товаров.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter filterSearchedText: (query) Значение параметра товара. (optional)
     - parameter filterSearchParameter: (query) Параметр товара, по которому выполняется поиск (Name - название, ItemID - внутренний идентификатор, BarCode - штрихкод). (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupCatalogGetCatalogHierarchyToFilteredGoodsGroupCatalogItems(goodsGroupId: Int, from: Int? = nil, count: Int? = nil, filterSearchedText: String? = nil, filterSearchParameter: GoodsCatalogSearchParameter? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupCatalogGetCatalogHierarchyToFilteredGoodsGroupCatalogItemsWithRequestBuilder(goodsGroupId: goodsGroupId, from: from, count: count, filterSearchedText: filterSearchedText, filterSearchParameter: filterSearchParameter).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить иерархию каталога товаров от корневого элемента до отфильтрованных, состоящих в группе товаров.
     - GET /v1.2/goodsGroups/{goodsGroupId}/catalog/search
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter filterSearchedText: (query) Значение параметра товара. (optional)
     - parameter filterSearchParameter: (query) Параметр товара, по которому выполняется поиск (Name - название, ItemID - внутренний идентификатор, BarCode - штрихкод). (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> 
     */
    open class func goodsGroupCatalogGetCatalogHierarchyToFilteredGoodsGroupCatalogItemsWithRequestBuilder(goodsGroupId: Int, from: Int? = nil, count: Int? = nil, filterSearchedText: String? = nil, filterSearchParameter: GoodsCatalogSearchParameter? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/catalog/search"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "filter.searchedText": filterSearchedText?.encodeToJSON(),
            "filter.searchParameter": filterSearchParameter?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить порядковый номер элемента в каталоге.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter catalogItemId: (path) Id элемента каталога. 
     - parameter parentNodeId: (query) Id родительского элемента каталога. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupCatalogGetCatalogItemIndex(goodsGroupId: Int, catalogItemId: Int, parentNodeId: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfInt32?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupCatalogGetCatalogItemIndexWithRequestBuilder(goodsGroupId: goodsGroupId, catalogItemId: catalogItemId, parentNodeId: parentNodeId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить порядковый номер элемента в каталоге.
     - GET /v1.2/goodsGroups/{goodsGroupId}/catalog/items/{catalogItemId}/index
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter catalogItemId: (path) Id элемента каталога. 
     - parameter parentNodeId: (query) Id родительского элемента каталога. (optional)
     - returns: RequestBuilder<ResultModelOfInt32> 
     */
    open class func goodsGroupCatalogGetCatalogItemIndexWithRequestBuilder(goodsGroupId: Int, catalogItemId: Int, parentNodeId: Int? = nil) -> RequestBuilder<ResultModelOfInt32> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/catalog/items/{catalogItemId}/index"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let catalogItemIdPreEscape = "\(APIHelper.mapValueToPathItem(catalogItemId))"
        let catalogItemIdPostEscape = catalogItemIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{catalogItemId}", with: catalogItemIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "parentNodeId": parentNodeId?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfInt32>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить каталог товаров, состоящих в наборах группы товаров.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter parentNodeId: (query) Id родительского узла. (optional)
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupCatalogGetGoodsGroupCatalog(goodsGroupId: Int, parentNodeId: Int? = nil, from: Int? = nil, count: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupCatalogGetGoodsGroupCatalogWithRequestBuilder(goodsGroupId: goodsGroupId, parentNodeId: parentNodeId, from: from, count: count).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить каталог товаров, состоящих в наборах группы товаров.
     - GET /v1.2/goodsGroups/{goodsGroupId}/catalog
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter parentNodeId: (query) Id родительского узла. (optional)
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> 
     */
    open class func goodsGroupCatalogGetGoodsGroupCatalogWithRequestBuilder(goodsGroupId: Int, parentNodeId: Int? = nil, from: Int? = nil, count: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/catalog"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "parentNodeId": parentNodeId?.encodeToJSON(),
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить каталог зафиксированных товаров группы товаров.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter parentNodeId: (query) Id родительского узла. (optional)
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupCatalogGetGoodsGroupFixedCatalog(goodsGroupId: Int, parentNodeId: Int? = nil, from: Int? = nil, count: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupCatalogGetGoodsGroupFixedCatalogWithRequestBuilder(goodsGroupId: goodsGroupId, parentNodeId: parentNodeId, from: from, count: count).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить каталог зафиксированных товаров группы товаров.
     - GET /v1.2/goodsGroups/{goodsGroupId}/fixedCatalog
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter parentNodeId: (query) Id родительского узла. (optional)
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> 
     */
    open class func goodsGroupCatalogGetGoodsGroupFixedCatalogWithRequestBuilder(goodsGroupId: Int, parentNodeId: Int? = nil, from: Int? = nil, count: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/fixedCatalog"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "parentNodeId": parentNodeId?.encodeToJSON(),
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить каталог товаров, подходящих под фильтр по атрибуту.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора. 
     - parameter attributeFilterId: (path) Id фильтра по атрибуту. 
     - parameter parentNodeId: (query) Id родительского узла. (optional)
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupCatalogGetGoodsSetAttributeFilterCatalog(goodsGroupId: Int, goodsSetId: Int, attributeFilterId: Int, parentNodeId: Int? = nil, from: Int? = nil, count: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupCatalogGetGoodsSetAttributeFilterCatalogWithRequestBuilder(goodsGroupId: goodsGroupId, goodsSetId: goodsSetId, attributeFilterId: attributeFilterId, parentNodeId: parentNodeId, from: from, count: count).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить каталог товаров, подходящих под фильтр по атрибуту.
     - GET /v1.2/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/attributeFilter/{attributeFilterId}/catalog
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора. 
     - parameter attributeFilterId: (path) Id фильтра по атрибуту. 
     - parameter parentNodeId: (query) Id родительского узла. (optional)
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> 
     */
    open class func goodsGroupCatalogGetGoodsSetAttributeFilterCatalogWithRequestBuilder(goodsGroupId: Int, goodsSetId: Int, attributeFilterId: Int, parentNodeId: Int? = nil, from: Int? = nil, count: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/attributeFilter/{attributeFilterId}/catalog"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let goodsSetIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsSetId))"
        let goodsSetIdPostEscape = goodsSetIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsSetId}", with: goodsSetIdPostEscape, options: .literal, range: nil)
        let attributeFilterIdPreEscape = "\(APIHelper.mapValueToPathItem(attributeFilterId))"
        let attributeFilterIdPostEscape = attributeFilterIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{attributeFilterId}", with: attributeFilterIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "parentNodeId": parentNodeId?.encodeToJSON(),
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить каталог товаров набора.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора. 
     - parameter parentNodeId: (query) Id родительского узла. (optional)
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter sortParameter: (query) Параметр сортировки. (optional)
     - parameter checkedOnly: (query) Отображать только выбранные элементы. (optional)
     - parameter filterSearchedText: (query) Значение параметра товара. (optional)
     - parameter filterSearchParameter: (query) Параметр товара, по которому выполняется поиск (Name - название, ItemID - внутренний идентификатор, BarCode - штрихкод). (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupCatalogGetGoodsSetCatalog(goodsGroupId: Int, goodsSetId: Int, parentNodeId: Int? = nil, from: Int? = nil, count: Int? = nil, sortParameter: GoodsCatalogSortParameter? = nil, checkedOnly: Bool? = nil, filterSearchedText: String? = nil, filterSearchParameter: GoodsCatalogSearchParameter? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupCatalogGetGoodsSetCatalogWithRequestBuilder(goodsGroupId: goodsGroupId, goodsSetId: goodsSetId, parentNodeId: parentNodeId, from: from, count: count, sortParameter: sortParameter, checkedOnly: checkedOnly, filterSearchedText: filterSearchedText, filterSearchParameter: filterSearchParameter).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить каталог товаров набора.
     - GET /v1.2/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/catalog
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора. 
     - parameter parentNodeId: (query) Id родительского узла. (optional)
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter sortParameter: (query) Параметр сортировки. (optional)
     - parameter checkedOnly: (query) Отображать только выбранные элементы. (optional)
     - parameter filterSearchedText: (query) Значение параметра товара. (optional)
     - parameter filterSearchParameter: (query) Параметр товара, по которому выполняется поиск (Name - название, ItemID - внутренний идентификатор, BarCode - штрихкод). (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> 
     */
    open class func goodsGroupCatalogGetGoodsSetCatalogWithRequestBuilder(goodsGroupId: Int, goodsSetId: Int, parentNodeId: Int? = nil, from: Int? = nil, count: Int? = nil, sortParameter: GoodsCatalogSortParameter? = nil, checkedOnly: Bool? = nil, filterSearchedText: String? = nil, filterSearchParameter: GoodsCatalogSearchParameter? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/catalog"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let goodsSetIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsSetId))"
        let goodsSetIdPostEscape = goodsSetIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsSetId}", with: goodsSetIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "parentNodeId": parentNodeId?.encodeToJSON(),
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "sortParameter": sortParameter?.encodeToJSON(),
            "checkedOnly": checkedOnly?.encodeToJSON(),
            "filter.searchedText": filterSearchedText?.encodeToJSON(),
            "filter.searchParameter": filterSearchParameter?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить каталог товаров, подходящих под фильтры по атрибутам.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора. 
     - parameter parentNodeId: (query) Id родительского узла. (optional)
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupCatalogGetGoodsSetFilteredCatalog(goodsGroupId: Int, goodsSetId: Int, parentNodeId: Int? = nil, from: Int? = nil, count: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupCatalogGetGoodsSetFilteredCatalogWithRequestBuilder(goodsGroupId: goodsGroupId, goodsSetId: goodsSetId, parentNodeId: parentNodeId, from: from, count: count).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить каталог товаров, подходящих под фильтры по атрибутам.
     - GET /v1.2/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/filteredCatalog
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора. 
     - parameter parentNodeId: (query) Id родительского узла. (optional)
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> 
     */
    open class func goodsGroupCatalogGetGoodsSetFilteredCatalogWithRequestBuilder(goodsGroupId: Int, goodsSetId: Int, parentNodeId: Int? = nil, from: Int? = nil, count: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/filteredCatalog"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let goodsSetIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsSetId))"
        let goodsSetIdPostEscape = goodsSetIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsSetId}", with: goodsSetIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "parentNodeId": parentNodeId?.encodeToJSON(),
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Обновить состояние элемента каталога в наборе товаров.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора. 
     - parameter items: (query) Подкаталоги. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupCatalogUpdateGoodsSetCatalogItem(goodsGroupId: Int, goodsSetId: Int, items: [GoodsSetCatalogItem], apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupCatalogUpdateGoodsSetCatalogItemWithRequestBuilder(goodsGroupId: goodsGroupId, goodsSetId: goodsSetId, items: items).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Обновить состояние элемента каталога в наборе товаров.
     - POST /v1.2/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/catalog/items
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора. 
     - parameter items: (query) Подкаталоги. 
     - returns: RequestBuilder<ResultModel> 
     */
    open class func goodsGroupCatalogUpdateGoodsSetCatalogItemWithRequestBuilder(goodsGroupId: Int, goodsSetId: Int, items: [GoodsSetCatalogItem]) -> RequestBuilder<ResultModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/sets/{goodsSetId}/catalog/items"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let goodsSetIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsSetId))"
        let goodsSetIdPostEscape = goodsSetIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsSetId}", with: goodsSetIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "items": items.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
