//
// LifeTimeDefinitionAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class LifeTimeDefinitionAPI {

    /**
     Возвращает информацию о времени жизни бонусов по его внутреннему идентификатору.
     
     - parameter id: (path) Внутренний идентификатор времени жизни бонусов. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func lifeTimeDefinitionGetLifeTimeDefinition(id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfLifeTimeDefinitionViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return lifeTimeDefinitionGetLifeTimeDefinitionWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о времени жизни бонусов по его внутреннему идентификатору.
     - GET /v1.2/lifeTimeDefinitions/{id}
     - parameter id: (path) Внутренний идентификатор времени жизни бонусов. 
     - returns: RequestBuilder<ResultModelOfLifeTimeDefinitionViewModel> 
     */
    open class func lifeTimeDefinitionGetLifeTimeDefinitionWithRequestBuilder(id: Int) -> RequestBuilder<ResultModelOfLifeTimeDefinitionViewModel> {
        var localVariablePath = "/v1.2/lifeTimeDefinitions/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfLifeTimeDefinitionViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает информацию о времени жизни бонусов по его внешнему идентификатору.
     
     - parameter uid: (path) Внешний идентификатор времени жизни бонусов. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func lifeTimeDefinitionGetLifeTimeDefinitionByUid(uid: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfLifeTimeDefinitionViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return lifeTimeDefinitionGetLifeTimeDefinitionByUidWithRequestBuilder(uid: uid).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о времени жизни бонусов по его внешнему идентификатору.
     - GET /v1.2/lifeTimeDefinitions/{uid}
     - parameter uid: (path) Внешний идентификатор времени жизни бонусов. 
     - returns: RequestBuilder<ResultModelOfLifeTimeDefinitionViewModel> 
     */
    open class func lifeTimeDefinitionGetLifeTimeDefinitionByUidWithRequestBuilder(uid: String) -> RequestBuilder<ResultModelOfLifeTimeDefinitionViewModel> {
        var localVariablePath = "/v1.2/lifeTimeDefinitions/{uid}"
        let uidPreEscape = "\(APIHelper.mapValueToPathItem(uid))"
        let uidPostEscape = uidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{uid}", with: uidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfLifeTimeDefinitionViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**

     - parameter name: (query)  (optional)
     - parameter status: (query)  (optional)
     - parameter from: (query)  (optional)
     - parameter count: (query)  (optional)
     - parameter logicalName: (query)  (optional)
     - parameter partnerId: (query)  (optional)
     - parameter lifeTimeDefinitionIds: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func lifeTimeDefinitionGetLifeTimeDefinitions(name: String? = nil, status: ArchivedState? = nil, from: Int? = nil, count: Int? = nil, logicalName: String? = nil, partnerId: Int? = nil, lifeTimeDefinitionIds: [Int]? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfLifeTimeDefinitionViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return lifeTimeDefinitionGetLifeTimeDefinitionsWithRequestBuilder(name: name, status: status, from: from, count: count, logicalName: logicalName, partnerId: partnerId, lifeTimeDefinitionIds: lifeTimeDefinitionIds).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /v1.2/lifeTimeDefinitions
     - parameter name: (query)  (optional)
     - parameter status: (query)  (optional)
     - parameter from: (query)  (optional)
     - parameter count: (query)  (optional)
     - parameter logicalName: (query)  (optional)
     - parameter partnerId: (query)  (optional)
     - parameter lifeTimeDefinitionIds: (query)  (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfLifeTimeDefinitionViewModel> 
     */
    open class func lifeTimeDefinitionGetLifeTimeDefinitionsWithRequestBuilder(name: String? = nil, status: ArchivedState? = nil, from: Int? = nil, count: Int? = nil, logicalName: String? = nil, partnerId: Int? = nil, lifeTimeDefinitionIds: [Int]? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfLifeTimeDefinitionViewModel> {
        let localVariablePath = "/v1.2/lifeTimeDefinitions"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "name": name?.encodeToJSON(),
            "status": status?.encodeToJSON(),
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "logicalName": logicalName?.encodeToJSON(),
            "partnerId": partnerId?.encodeToJSON(),
            "lifeTimeDefinitionIds": lifeTimeDefinitionIds?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfLifeTimeDefinitionViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Востанавливает из архива время жизни бонуса.
     
     - parameter id: (path) Внутренний идентификатор времени жизни бонусов. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func lifeTimeDefinitionRestoreLifeTimeDefinition(id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModel?, _ error: Error?) -> Void)) -> RequestTask {
        return lifeTimeDefinitionRestoreLifeTimeDefinitionWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Востанавливает из архива время жизни бонуса.
     - POST /v1.2/lifeTimeDefinitions/{id}/restore
     - parameter id: (path) Внутренний идентификатор времени жизни бонусов. 
     - returns: RequestBuilder<ResultModel> 
     */
    open class func lifeTimeDefinitionRestoreLifeTimeDefinitionWithRequestBuilder(id: Int) -> RequestBuilder<ResultModel> {
        var localVariablePath = "/v1.2/lifeTimeDefinitions/{id}/restore"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
