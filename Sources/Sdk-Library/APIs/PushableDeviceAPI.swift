//
// PushableDeviceAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class PushableDeviceAPI {

    /**
     Список всех push-устройств клиента.
     
     - parameter personId: (path) Id пользователя. 
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter searchOption: (query) Параметр поиска пуш-устройств. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func pushableDeviceGetPushDevices(personId: Int, from: Int? = nil, count: Int? = nil, searchOption: PushableDeviceSearchOption? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfPushableDeviceViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return pushableDeviceGetPushDevicesWithRequestBuilder(personId: personId, from: from, count: count, searchOption: searchOption).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Список всех push-устройств клиента.
     - GET /v1.2/users/{personId}/PushableDevices
     - parameter personId: (path) Id пользователя. 
     - parameter from: (query) From. (optional)
     - parameter count: (query) Count. (optional)
     - parameter searchOption: (query) Параметр поиска пуш-устройств. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfPushableDeviceViewModel> 
     */
    open class func pushableDeviceGetPushDevicesWithRequestBuilder(personId: Int, from: Int? = nil, count: Int? = nil, searchOption: PushableDeviceSearchOption? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfPushableDeviceViewModel> {
        var localVariablePath = "/v1.2/users/{personId}/PushableDevices"
        let personIdPreEscape = "\(APIHelper.mapValueToPathItem(personId))"
        let personIdPostEscape = personIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{personId}", with: personIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "searchOption": searchOption?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfPushableDeviceViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
