//
// PartnerCatalogAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class PartnerCatalogAPI {

    /**
     Генерирует новый пароль для каталога.
     
     - parameter partnerId: (path)  
     - parameter catalogId: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func partnerCatalogGeneratePassword(partnerId: String, catalogId: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfString?, _ error: Error?) -> Void)) -> RequestTask {
        return partnerCatalogGeneratePasswordWithRequestBuilder(partnerId: partnerId, catalogId: catalogId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Генерирует новый пароль для каталога.
     - GET /v1.2/partners/{partnerId}/catalogs/{catalogId}/generatePassword
     - parameter partnerId: (path)  
     - parameter catalogId: (path)  
     - returns: RequestBuilder<ResultModelOfString> 
     */
    open class func partnerCatalogGeneratePasswordWithRequestBuilder(partnerId: String, catalogId: String) -> RequestBuilder<ResultModelOfString> {
        var localVariablePath = "/v1.2/partners/{partnerId}/catalogs/{catalogId}/generatePassword"
        let partnerIdPreEscape = "\(APIHelper.mapValueToPathItem(partnerId))"
        let partnerIdPostEscape = partnerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{partnerId}", with: partnerIdPostEscape, options: .literal, range: nil)
        let catalogIdPreEscape = "\(APIHelper.mapValueToPathItem(catalogId))"
        let catalogIdPostEscape = catalogIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{catalogId}", with: catalogIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfString>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает информацию о каталоге Партнера по внутреннему идентифкатору каталога.
     
     - parameter partnerId: (path) Внутренний идентификатор Партнера. 
     - parameter catalogId: (path) Внутренний идентификатор каталога. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func partnerCatalogGet(partnerId: Int, catalogId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPartnerCatalogViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return partnerCatalogGetWithRequestBuilder(partnerId: partnerId, catalogId: catalogId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о каталоге Партнера по внутреннему идентифкатору каталога.
     - GET /v1.2/partners/{partnerId}/catalogs/{catalogId}
     - parameter partnerId: (path) Внутренний идентификатор Партнера. 
     - parameter catalogId: (path) Внутренний идентификатор каталога. 
     - returns: RequestBuilder<ResultModelOfPartnerCatalogViewModel> 
     */
    open class func partnerCatalogGetWithRequestBuilder(partnerId: Int, catalogId: Int) -> RequestBuilder<ResultModelOfPartnerCatalogViewModel> {
        var localVariablePath = "/v1.2/partners/{partnerId}/catalogs/{catalogId}"
        let partnerIdPreEscape = "\(APIHelper.mapValueToPathItem(partnerId))"
        let partnerIdPostEscape = partnerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{partnerId}", with: partnerIdPostEscape, options: .literal, range: nil)
        let catalogIdPreEscape = "\(APIHelper.mapValueToPathItem(catalogId))"
        let catalogIdPostEscape = catalogIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{catalogId}", with: catalogIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPartnerCatalogViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает информацию о каталоге Партнера по внешнему идентифкатору каталога.
     
     - parameter partnerUid: (path) Внешний идентификатор Партнера. 
     - parameter catalogUid: (path) Внешний идентификатор каталога. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func partnerCatalogGetByCatalogUid(partnerUid: String, catalogUid: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPartnerCatalogViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return partnerCatalogGetByCatalogUidWithRequestBuilder(partnerUid: partnerUid, catalogUid: catalogUid).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о каталоге Партнера по внешнему идентифкатору каталога.
     - GET /v1.2/partners/{partnerUid}/catalogs/{catalogUid}
     - parameter partnerUid: (path) Внешний идентификатор Партнера. 
     - parameter catalogUid: (path) Внешний идентификатор каталога. 
     - returns: RequestBuilder<ResultModelOfPartnerCatalogViewModel> 
     */
    open class func partnerCatalogGetByCatalogUidWithRequestBuilder(partnerUid: String, catalogUid: String) -> RequestBuilder<ResultModelOfPartnerCatalogViewModel> {
        var localVariablePath = "/v1.2/partners/{partnerUid}/catalogs/{catalogUid}"
        let partnerUidPreEscape = "\(APIHelper.mapValueToPathItem(partnerUid))"
        let partnerUidPostEscape = partnerUidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{partnerUid}", with: partnerUidPostEscape, options: .literal, range: nil)
        let catalogUidPreEscape = "\(APIHelper.mapValueToPathItem(catalogUid))"
        let catalogUidPostEscape = catalogUidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{catalogUid}", with: catalogUidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPartnerCatalogViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает список каталогов Партнера по внутреннему идентификатору.
     
     - parameter partnerId: (path) Внутренний идентификатор Партнера. 
     - parameter name: (query) Название каталога. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func partnerCatalogGetPartnerCatalogs(partnerId: Int, name: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfPartnerCatalogViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return partnerCatalogGetPartnerCatalogsWithRequestBuilder(partnerId: partnerId, name: name).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает список каталогов Партнера по внутреннему идентификатору.
     - GET /v1.2/partners/{partnerId}/catalogs
     - parameter partnerId: (path) Внутренний идентификатор Партнера. 
     - parameter name: (query) Название каталога. (optional)
     - returns: RequestBuilder<ResultModelOfListOfPartnerCatalogViewModel> 
     */
    open class func partnerCatalogGetPartnerCatalogsWithRequestBuilder(partnerId: Int, name: String? = nil) -> RequestBuilder<ResultModelOfListOfPartnerCatalogViewModel> {
        var localVariablePath = "/v1.2/partners/{partnerId}/catalogs"
        let partnerIdPreEscape = "\(APIHelper.mapValueToPathItem(partnerId))"
        let partnerIdPostEscape = partnerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{partnerId}", with: partnerIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "name": name?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfPartnerCatalogViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает список каталогов Партнера по внешнему идентификатору.
     
     - parameter partnerUid: (path) Внешний идентификатор Партнера. 
     - parameter name: (query) Название каталога. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func partnerCatalogGetPartnersByPartnerUidCatalogs(partnerUid: String, name: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfPartnerCatalogViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return partnerCatalogGetPartnersByPartnerUidCatalogsWithRequestBuilder(partnerUid: partnerUid, name: name).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает список каталогов Партнера по внешнему идентификатору.
     - GET /v1.2/partners/{partnerUid}/catalogs
     - parameter partnerUid: (path) Внешний идентификатор Партнера. 
     - parameter name: (query) Название каталога. (optional)
     - returns: RequestBuilder<ResultModelOfListOfPartnerCatalogViewModel> 
     */
    open class func partnerCatalogGetPartnersByPartnerUidCatalogsWithRequestBuilder(partnerUid: String, name: String? = nil) -> RequestBuilder<ResultModelOfListOfPartnerCatalogViewModel> {
        var localVariablePath = "/v1.2/partners/{partnerUid}/catalogs"
        let partnerUidPreEscape = "\(APIHelper.mapValueToPathItem(partnerUid))"
        let partnerUidPostEscape = partnerUidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{partnerUid}", with: partnerUidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "name": name?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfPartnerCatalogViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
