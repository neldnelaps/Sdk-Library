//
// DeviceAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DeviceAPI {

    /**

     - parameter from: (query)  (optional)
     - parameter count: (query)  (optional)
     - parameter code: (query)  (optional)
     - parameter mode: (query)  (optional)
     - parameter loyaltyProgramId: (query)  (optional)
     - parameter sortingId: (query)  (optional)
     - parameter merchantIds: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func deviceGetAvailableDevices(from: Int? = nil, count: Int? = nil, code: String? = nil, mode: ArchivedState? = nil, loyaltyProgramId: Int? = nil, sortingId: Int? = nil, merchantIds: [Int]? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfDeviceBriefViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return deviceGetAvailableDevicesWithRequestBuilder(from: from, count: count, code: code, mode: mode, loyaltyProgramId: loyaltyProgramId, sortingId: sortingId, merchantIds: merchantIds).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /v1.2/Devices
     - parameter from: (query)  (optional)
     - parameter count: (query)  (optional)
     - parameter code: (query)  (optional)
     - parameter mode: (query)  (optional)
     - parameter loyaltyProgramId: (query)  (optional)
     - parameter sortingId: (query)  (optional)
     - parameter merchantIds: (query)  (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfDeviceBriefViewModel> 
     */
    open class func deviceGetAvailableDevicesWithRequestBuilder(from: Int? = nil, count: Int? = nil, code: String? = nil, mode: ArchivedState? = nil, loyaltyProgramId: Int? = nil, sortingId: Int? = nil, merchantIds: [Int]? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfDeviceBriefViewModel> {
        let localVariablePath = "/v1.2/Devices"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "code": code?.encodeToJSON(),
            "mode": mode?.encodeToJSON(),
            "loyaltyProgramId": loyaltyProgramId?.encodeToJSON(),
            "sortingId": sortingId?.encodeToJSON(),
            "merchantIds": merchantIds?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfDeviceBriefViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает информацию о счетах кассы.
     
     - parameter id: (path) Внутренний идентификатор кассы. 
     - parameter loyaltyProgramId: (query) Внутренний идентификатор Программы лояльности. 
     - parameter filterFrom: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter filterCount: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter filterName: (query) Подстрока для поиска по названию валюты. (optional)
     - parameter filterSortingIds: (query) Список внутренних идентификаторов касс, которые будут отображаться первыми в списке. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func deviceGetDeviceBalances(id: Int, loyaltyProgramId: Int, filterFrom: Int? = nil, filterCount: Int? = nil, filterName: String? = nil, filterSortingIds: [Int]? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfMoneyViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return deviceGetDeviceBalancesWithRequestBuilder(id: id, loyaltyProgramId: loyaltyProgramId, filterFrom: filterFrom, filterCount: filterCount, filterName: filterName, filterSortingIds: filterSortingIds).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о счетах кассы.
     - GET /v1.2/Devices/{id}/balances
     - parameter id: (path) Внутренний идентификатор кассы. 
     - parameter loyaltyProgramId: (query) Внутренний идентификатор Программы лояльности. 
     - parameter filterFrom: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter filterCount: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter filterName: (query) Подстрока для поиска по названию валюты. (optional)
     - parameter filterSortingIds: (query) Список внутренних идентификаторов касс, которые будут отображаться первыми в списке. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfMoneyViewModel> 
     */
    open class func deviceGetDeviceBalancesWithRequestBuilder(id: Int, loyaltyProgramId: Int, filterFrom: Int? = nil, filterCount: Int? = nil, filterName: String? = nil, filterSortingIds: [Int]? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfMoneyViewModel> {
        var localVariablePath = "/v1.2/Devices/{id}/balances"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "loyaltyProgramId": loyaltyProgramId.encodeToJSON(),
            "filter.from": filterFrom?.encodeToJSON(),
            "filter.count": filterCount?.encodeToJSON(),
            "filter.name": filterName?.encodeToJSON(),
            "filter.sortingIds": filterSortingIds?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfMoneyViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
