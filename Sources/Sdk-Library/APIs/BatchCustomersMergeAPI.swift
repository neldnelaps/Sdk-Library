//
// BatchCustomersMergeAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class BatchCustomersMergeAPI {

    /**
     Возвращает информацию о пакетном объединении по внутреннему идентификатору.
     
     - parameter batchId: (path) Внутренний идентификатор пакетного объединения. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchCustomersMergeGetBatch(batchId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfBatchUploadModel?, _ error: Error?) -> Void)) -> RequestTask {
        return batchCustomersMergeGetBatchWithRequestBuilder(batchId: batchId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о пакетном объединении по внутреннему идентификатору.
     - GET /v1.2/customersMerge/{batchId}
     - parameter batchId: (path) Внутренний идентификатор пакетного объединения. 
     - returns: RequestBuilder<ResultModelOfBatchUploadModel> 
     */
    open class func batchCustomersMergeGetBatchWithRequestBuilder(batchId: Int) -> RequestBuilder<ResultModelOfBatchUploadModel> {
        var localVariablePath = "/v1.2/customersMerge/{batchId}"
        let batchIdPreEscape = "\(APIHelper.mapValueToPathItem(batchId))"
        let batchIdPostEscape = batchIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{batchId}", with: batchIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfBatchUploadModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает информацию о пакетном объединении.
     
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter batchUploadFilterModelState: (query)  (optional)
     - parameter batchUploadFilterModelIncludeDeleted: (query)  (optional)
     - parameter batchUploadFilterModelFromDate: (query)  (optional)
     - parameter batchUploadFilterModelToDate: (query)  (optional)
     - parameter batchUploadFilterModelAuthorId: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchCustomersMergeGetCustomersMergeBatches(from: Int? = nil, count: Int? = nil, batchUploadFilterModelState: BatchState? = nil, batchUploadFilterModelIncludeDeleted: Bool? = nil, batchUploadFilterModelFromDate: String? = nil, batchUploadFilterModelToDate: String? = nil, batchUploadFilterModelAuthorId: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfBatchUploadModel?, _ error: Error?) -> Void)) -> RequestTask {
        return batchCustomersMergeGetCustomersMergeBatchesWithRequestBuilder(from: from, count: count, batchUploadFilterModelState: batchUploadFilterModelState, batchUploadFilterModelIncludeDeleted: batchUploadFilterModelIncludeDeleted, batchUploadFilterModelFromDate: batchUploadFilterModelFromDate, batchUploadFilterModelToDate: batchUploadFilterModelToDate, batchUploadFilterModelAuthorId: batchUploadFilterModelAuthorId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает информацию о пакетном объединении.
     - GET /v1.2/customersMerge
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter batchUploadFilterModelState: (query)  (optional)
     - parameter batchUploadFilterModelIncludeDeleted: (query)  (optional)
     - parameter batchUploadFilterModelFromDate: (query)  (optional)
     - parameter batchUploadFilterModelToDate: (query)  (optional)
     - parameter batchUploadFilterModelAuthorId: (query)  (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfBatchUploadModel> 
     */
    open class func batchCustomersMergeGetCustomersMergeBatchesWithRequestBuilder(from: Int? = nil, count: Int? = nil, batchUploadFilterModelState: BatchState? = nil, batchUploadFilterModelIncludeDeleted: Bool? = nil, batchUploadFilterModelFromDate: String? = nil, batchUploadFilterModelToDate: String? = nil, batchUploadFilterModelAuthorId: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfBatchUploadModel> {
        let localVariablePath = "/v1.2/customersMerge"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "batchUploadFilterModel.state": batchUploadFilterModelState?.encodeToJSON(),
            "batchUploadFilterModel.includeDeleted": batchUploadFilterModelIncludeDeleted?.encodeToJSON(),
            "batchUploadFilterModel.fromDate": batchUploadFilterModelFromDate?.encodeToJSON(),
            "batchUploadFilterModel.toDate": batchUploadFilterModelToDate?.encodeToJSON(),
            "batchUploadFilterModel.authorId": batchUploadFilterModelAuthorId?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfBatchUploadModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Возвращает список операций по внутреннему идентификатору пакетного объединения.
     
     - parameter id: (path) Внутренний идентификатор пакетного объединения. 
     - parameter state: (query) Состояние операции (Created — создана, Completed — выполнена, Error — ошибка при выполнении) {Loymax.Domain.Contract.DeferredOperationState}. (optional)
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func batchCustomersMergeGetOperations(id: Int, state: DeferredOperationState? = nil, from: Int? = nil, count: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfBatchUploadDataModel?, _ error: Error?) -> Void)) -> RequestTask {
        return batchCustomersMergeGetOperationsWithRequestBuilder(id: id, state: state, from: from, count: count).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Возвращает список операций по внутреннему идентификатору пакетного объединения.
     - GET /v1.2/customersMerge/{id}/operations
     - parameter id: (path) Внутренний идентификатор пакетного объединения. 
     - parameter state: (query) Состояние операции (Created — создана, Completed — выполнена, Error — ошибка при выполнении) {Loymax.Domain.Contract.DeferredOperationState}. (optional)
     - parameter from: (query) Порядковый номер начального элемента выборки. (optional)
     - parameter count: (query) Количество возвращаемых элементов выборки. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfBatchUploadDataModel> 
     */
    open class func batchCustomersMergeGetOperationsWithRequestBuilder(id: Int, state: DeferredOperationState? = nil, from: Int? = nil, count: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfBatchUploadDataModel> {
        var localVariablePath = "/v1.2/customersMerge/{id}/operations"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "state": state?.encodeToJSON(),
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfBatchUploadDataModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
