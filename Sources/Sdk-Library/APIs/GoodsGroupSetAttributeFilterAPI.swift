//
// GoodsGroupSetAttributeFilterAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class GoodsGroupSetAttributeFilterAPI {

    /**
     Доступные для выбора атрибуты.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора группы товаров. 
     - parameter partnerId: (query) Id партнера. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupSetAttributeFilterGetAvailableAttributes(goodsGroupId: Int, goodsSetId: Int, partnerId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfCatalogAttributeViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupSetAttributeFilterGetAvailableAttributesWithRequestBuilder(goodsGroupId: goodsGroupId, goodsSetId: goodsSetId, partnerId: partnerId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Доступные для выбора атрибуты.
     - GET /v1.2/goodsGroups/{goodsGroupId}/goodsSets/{goodsSetId}/attributeItems/availableAttributes
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора группы товаров. 
     - parameter partnerId: (query) Id партнера. 
     - returns: RequestBuilder<ResultModelOfListOfCatalogAttributeViewModel> 
     */
    open class func goodsGroupSetAttributeFilterGetAvailableAttributesWithRequestBuilder(goodsGroupId: Int, goodsSetId: Int, partnerId: Int) -> RequestBuilder<ResultModelOfListOfCatalogAttributeViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/goodsSets/{goodsSetId}/attributeItems/availableAttributes"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let goodsSetIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsSetId))"
        let goodsSetIdPostEscape = goodsSetIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsSetId}", with: goodsSetIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "partnerId": partnerId.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfCatalogAttributeViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получает фильтр по атрибутам по его ID.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора группы товаров. 
     - parameter attributeItemId: (path) Id фильтра. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupSetAttributeFilterGetGoodsGroupsByGoodsGroupIdGoodsSetsByGoodsSetIdAttributeItemsByAttributeItemId(goodsGroupId: Int, goodsSetId: Int, attributeItemId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfGoodsSetAttributeFilterItemViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupSetAttributeFilterGetGoodsGroupsByGoodsGroupIdGoodsSetsByGoodsSetIdAttributeItemsByAttributeItemIdWithRequestBuilder(goodsGroupId: goodsGroupId, goodsSetId: goodsSetId, attributeItemId: attributeItemId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получает фильтр по атрибутам по его ID.
     - GET /v1.2/goodsGroups/{goodsGroupId}/goodsSets/{goodsSetId}/attributeItems/{attributeItemId}
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора группы товаров. 
     - parameter attributeItemId: (path) Id фильтра. 
     - returns: RequestBuilder<ResultModelOfGoodsSetAttributeFilterItemViewModel> 
     */
    open class func goodsGroupSetAttributeFilterGetGoodsGroupsByGoodsGroupIdGoodsSetsByGoodsSetIdAttributeItemsByAttributeItemIdWithRequestBuilder(goodsGroupId: Int, goodsSetId: Int, attributeItemId: Int) -> RequestBuilder<ResultModelOfGoodsSetAttributeFilterItemViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/goodsSets/{goodsSetId}/attributeItems/{attributeItemId}"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let goodsSetIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsSetId))"
        let goodsSetIdPostEscape = goodsSetIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsSetId}", with: goodsSetIdPostEscape, options: .literal, range: nil)
        let attributeItemIdPreEscape = "\(APIHelper.mapValueToPathItem(attributeItemId))"
        let attributeItemIdPostEscape = attributeItemIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{attributeItemId}", with: attributeItemIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfGoodsSetAttributeFilterItemViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить фильтры по атрибутам набора группы товаров.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора группы товаров. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupSetAttributeFilterGetGoodsSetAttributeFilterItems(goodsGroupId: Int, goodsSetId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfGoodsSetAttributeFilterItemViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupSetAttributeFilterGetGoodsSetAttributeFilterItemsWithRequestBuilder(goodsGroupId: goodsGroupId, goodsSetId: goodsSetId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить фильтры по атрибутам набора группы товаров.
     - GET /v1.2/goodsGroups/{goodsGroupId}/goodsSets/{goodsSetId}/attributeItems
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора группы товаров. 
     - returns: RequestBuilder<ResultModelOfListOfGoodsSetAttributeFilterItemViewModel> 
     */
    open class func goodsGroupSetAttributeFilterGetGoodsSetAttributeFilterItemsWithRequestBuilder(goodsGroupId: Int, goodsSetId: Int) -> RequestBuilder<ResultModelOfListOfGoodsSetAttributeFilterItemViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/goodsSets/{goodsSetId}/attributeItems"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let goodsSetIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsSetId))"
        let goodsSetIdPostEscape = goodsSetIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsSetId}", with: goodsSetIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfGoodsSetAttributeFilterItemViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получает атрибуты, доступные для выбора в атрибутном фильтре.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора группы товаров. 
     - parameter attributeItemId: (path) Id фильтра по атрибутам. 
     - parameter partnerId: (query) Id партнера. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupSetAttributeFilterGetItemAvailableAttributes(goodsGroupId: Int, goodsSetId: Int, attributeItemId: Int, partnerId: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfCatalogAttributeViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupSetAttributeFilterGetItemAvailableAttributesWithRequestBuilder(goodsGroupId: goodsGroupId, goodsSetId: goodsSetId, attributeItemId: attributeItemId, partnerId: partnerId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получает атрибуты, доступные для выбора в атрибутном фильтре.
     - GET /v1.2/goodsGroups/{goodsGroupId}/goodsSets/{goodsSetId}/attributeItems/{attributeItemId}/availableAttributes
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter goodsSetId: (path) Id набора группы товаров. 
     - parameter attributeItemId: (path) Id фильтра по атрибутам. 
     - parameter partnerId: (query) Id партнера. 
     - returns: RequestBuilder<ResultModelOfListOfCatalogAttributeViewModel> 
     */
    open class func goodsGroupSetAttributeFilterGetItemAvailableAttributesWithRequestBuilder(goodsGroupId: Int, goodsSetId: Int, attributeItemId: Int, partnerId: Int) -> RequestBuilder<ResultModelOfListOfCatalogAttributeViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/goodsSets/{goodsSetId}/attributeItems/{attributeItemId}/availableAttributes"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let goodsSetIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsSetId))"
        let goodsSetIdPostEscape = goodsSetIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsSetId}", with: goodsSetIdPostEscape, options: .literal, range: nil)
        let attributeItemIdPreEscape = "\(APIHelper.mapValueToPathItem(attributeItemId))"
        let attributeItemIdPostEscape = attributeItemIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{attributeItemId}", with: attributeItemIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "partnerId": partnerId.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfCatalogAttributeViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
