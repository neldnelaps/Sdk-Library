//
// MailingGatewayViewModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Модель шлюза рассылки. */
public struct MailingGatewayViewModel: Codable, JSONEncodable, Hashable {

    /** Идентификотор шлюза. */
    public var id: Int?
    /** Логическое имя шлюза. */
    public var code: String?
    /** Название шлюза. */
    public var name: String?
    /** Включен. */
    public var enabled: Bool?
    /** Идентификатор провайдера. */
    public var providerId: Int?

    public init(id: Int? = nil, code: String? = nil, name: String? = nil, enabled: Bool? = nil, providerId: Int? = nil) {
        self.id = id
        self.code = code
        self.name = name
        self.enabled = enabled
        self.providerId = providerId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case code
        case name
        case enabled
        case providerId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(code, forKey: .code)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(enabled, forKey: .enabled)
        try container.encodeIfPresent(providerId, forKey: .providerId)
    }
}

