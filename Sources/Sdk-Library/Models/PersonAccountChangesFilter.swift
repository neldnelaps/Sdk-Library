//
// PersonAccountChangesFilter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Фильтр изменений по счету. */
public struct PersonAccountChangesFilter: Codable, JSONEncodable, Hashable {

    /** Начальная дата выборки в формате 0000-00-00T00:00:00Z. */
    public var fromDate: Date?
    /** Конечная дата выборки в формате 0000-00-00T00:00:00Z. */
    public var toDate: Date?
    /** Фильтр по типу изменения (активации/сгорания). */
    public var changeTypes: [AccountChangeType]?
    /** Порядковый номер начального элемента выборки. */
    public var from: Int?
    /** Количество возвращаемых элементов выборки. */
    public var count: Int?

    public init(fromDate: Date? = nil, toDate: Date? = nil, changeTypes: [AccountChangeType]? = nil, from: Int? = nil, count: Int? = nil) {
        self.fromDate = fromDate
        self.toDate = toDate
        self.changeTypes = changeTypes
        self.from = from
        self.count = count
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case fromDate
        case toDate
        case changeTypes
        case from
        case count
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(fromDate, forKey: .fromDate)
        try container.encodeIfPresent(toDate, forKey: .toDate)
        try container.encodeIfPresent(changeTypes, forKey: .changeTypes)
        try container.encodeIfPresent(from, forKey: .from)
        try container.encodeIfPresent(count, forKey: .count)
    }
}

