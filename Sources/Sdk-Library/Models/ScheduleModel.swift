//
// ScheduleModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Модель графика работы торговой точки. */
public struct ScheduleModel: Codable, JSONEncodable, Hashable {

    /** Понедельник. */
    public var mon: [OpeningHours]?
    /** Вторник. */
    public var tue: [OpeningHours]?
    /** Среда. */
    public var wed: [OpeningHours]?
    /** Четверг. */
    public var thu: [OpeningHours]?
    /** Пятница. */
    public var fri: [OpeningHours]?
    /** Суббота. */
    public var sat: [OpeningHours]?
    /** Воскресенье. */
    public var sun: [OpeningHours]?

    public init(mon: [OpeningHours]? = nil, tue: [OpeningHours]? = nil, wed: [OpeningHours]? = nil, thu: [OpeningHours]? = nil, fri: [OpeningHours]? = nil, sat: [OpeningHours]? = nil, sun: [OpeningHours]? = nil) {
        self.mon = mon
        self.tue = tue
        self.wed = wed
        self.thu = thu
        self.fri = fri
        self.sat = sat
        self.sun = sun
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mon
        case tue
        case wed
        case thu
        case fri
        case sat
        case sun
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(mon, forKey: .mon)
        try container.encodeIfPresent(tue, forKey: .tue)
        try container.encodeIfPresent(wed, forKey: .wed)
        try container.encodeIfPresent(thu, forKey: .thu)
        try container.encodeIfPresent(fri, forKey: .fri)
        try container.encodeIfPresent(sat, forKey: .sat)
        try container.encodeIfPresent(sun, forKey: .sun)
    }
}

