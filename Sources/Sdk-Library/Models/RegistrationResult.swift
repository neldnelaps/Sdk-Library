//
// RegistrationResult.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Результат регистрации. */
public struct RegistrationResult: Codable, JSONEncodable, Hashable {

    public var state: RegistrationState?
    /** Текст сообщения об ошибке. */
    public var errorMessage: String?
    /** Токен аутентификации для дальнейших действий. */
    public var authToken: String?
    public var authResult: AuthResultModel?
    /** Id клиента для дальнейших действий. */
    public var personId: Int?

    public init(state: RegistrationState? = nil, errorMessage: String? = nil, authToken: String? = nil, authResult: AuthResultModel? = nil, personId: Int? = nil) {
        self.state = state
        self.errorMessage = errorMessage
        self.authToken = authToken
        self.authResult = authResult
        self.personId = personId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case state
        case errorMessage
        case authToken
        case authResult
        case personId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(state, forKey: .state)
        try container.encodeIfPresent(errorMessage, forKey: .errorMessage)
        try container.encodeIfPresent(authToken, forKey: .authToken)
        try container.encodeIfPresent(authResult, forKey: .authResult)
        try container.encodeIfPresent(personId, forKey: .personId)
    }
}

