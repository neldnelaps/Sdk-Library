//
// CommonAttributeFilterViewModelAnyOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CommonAttributeFilterViewModelAnyOf: Codable, JSONEncodable, Hashable {

    public var attributeType: CommonAttributeValueType?
    /** Массив выбранных элементов (для атрибута типа RadioString). */
    public var radioStringItems: [Int]?
    /** Первое числовое значение. */
    public var firstValue: Double?
    /** Второе числовое значение. */
    public var secondValue: Double?
    public var operation: FilterOperation?
    /** Идентификатор атрибута. */
    public var attributeId: Int?
    /** Значение атрибута. */
    public var attributeValue: String?
    /** Существует ли атрибут. */
    public var attributeIsExists: Bool?

    public init(attributeType: CommonAttributeValueType? = nil, radioStringItems: [Int]? = nil, firstValue: Double? = nil, secondValue: Double? = nil, operation: FilterOperation? = nil, attributeId: Int? = nil, attributeValue: String? = nil, attributeIsExists: Bool? = nil) {
        self.attributeType = attributeType
        self.radioStringItems = radioStringItems
        self.firstValue = firstValue
        self.secondValue = secondValue
        self.operation = operation
        self.attributeId = attributeId
        self.attributeValue = attributeValue
        self.attributeIsExists = attributeIsExists
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case attributeType
        case radioStringItems
        case firstValue
        case secondValue
        case operation
        case attributeId
        case attributeValue
        case attributeIsExists
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(attributeType, forKey: .attributeType)
        try container.encodeIfPresent(radioStringItems, forKey: .radioStringItems)
        try container.encodeIfPresent(firstValue, forKey: .firstValue)
        try container.encodeIfPresent(secondValue, forKey: .secondValue)
        try container.encodeIfPresent(operation, forKey: .operation)
        try container.encodeIfPresent(attributeId, forKey: .attributeId)
        try container.encodeIfPresent(attributeValue, forKey: .attributeValue)
        try container.encodeIfPresent(attributeIsExists, forKey: .attributeIsExists)
    }
}

