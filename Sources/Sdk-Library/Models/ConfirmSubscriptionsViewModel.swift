//
// ConfirmSubscriptionsViewModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Информация о согласии Клиента на получение рассылок. */
public struct ConfirmSubscriptionsViewModel: Codable, JSONEncodable, Hashable {

    /** Признак получения согласия. */
    public var acceptSubscribeToAll: Bool?
    /** Дата получения согласия. */
    public var acceptSubscribeToAllDate: Date?
    /** Источник получения согласия. */
    public var acceptSubscriptionToAllSourceId: String?

    public init(acceptSubscribeToAll: Bool? = nil, acceptSubscribeToAllDate: Date? = nil, acceptSubscriptionToAllSourceId: String? = nil) {
        self.acceptSubscribeToAll = acceptSubscribeToAll
        self.acceptSubscribeToAllDate = acceptSubscribeToAllDate
        self.acceptSubscriptionToAllSourceId = acceptSubscriptionToAllSourceId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case acceptSubscribeToAll
        case acceptSubscribeToAllDate
        case acceptSubscriptionToAllSourceId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(acceptSubscribeToAll, forKey: .acceptSubscribeToAll)
        try container.encodeIfPresent(acceptSubscribeToAllDate, forKey: .acceptSubscribeToAllDate)
        try container.encodeIfPresent(acceptSubscriptionToAllSourceId, forKey: .acceptSubscriptionToAllSourceId)
    }
}

