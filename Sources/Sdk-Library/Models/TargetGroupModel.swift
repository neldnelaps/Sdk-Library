//
// TargetGroupModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Модель целевой аудитории. */
public struct TargetGroupModel: Codable, JSONEncodable, Hashable {

    /** Название. */
    public var name: String?
    /** Описание. */
    public var description: String?
    /** Внутренний идентификатор Партнера. */
    public var partnerId: Int?
    /** Внутренний идентификатор Программы лояльности. */
    public var loyaltyProgramId: Int?
    /** Тип целевой аудитории. */
    public var isExternal: Bool?

    public init(name: String? = nil, description: String? = nil, partnerId: Int? = nil, loyaltyProgramId: Int? = nil, isExternal: Bool? = nil) {
        self.name = name
        self.description = description
        self.partnerId = partnerId
        self.loyaltyProgramId = loyaltyProgramId
        self.isExternal = isExternal
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case description
        case partnerId
        case loyaltyProgramId
        case isExternal
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(partnerId, forKey: .partnerId)
        try container.encodeIfPresent(loyaltyProgramId, forKey: .loyaltyProgramId)
        try container.encodeIfPresent(isExternal, forKey: .isExternal)
    }
}

