//
// FixedAnswerViewModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Модель варианта ответа {Loymax.Domain.Contract.Model.Question.FixedAnswers.IFixedAnswer}. */
public struct FixedAnswerViewModel: Codable, JSONEncodable, Hashable {

    /** Внутренний идентификатор варианта ответа. */
    public var id: Int?
    /** Внутренний идентификатор вопроса. */
    public var questionId: Int?
    /** Возможность ввода произвольного ответа (true — да, false — нет). */
    public var isCustom: Bool?
    /** Порядковый номер варианта ответа. */
    public var order: Int?
    /** Значение варианта ответа. */
    public var value: String?

    public init(id: Int? = nil, questionId: Int? = nil, isCustom: Bool? = nil, order: Int? = nil, value: String? = nil) {
        self.id = id
        self.questionId = questionId
        self.isCustom = isCustom
        self.order = order
        self.value = value
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case questionId
        case isCustom
        case order
        case value
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(questionId, forKey: .questionId)
        try container.encodeIfPresent(isCustom, forKey: .isCustom)
        try container.encodeIfPresent(order, forKey: .order)
        try container.encodeIfPresent(value, forKey: .value)
    }
}

