//
// NumberTemplateViewModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** ViewModel шаблона для номера. */
public struct NumberTemplateViewModel: Codable, JSONEncodable, Hashable {

    /** Идентификатор шаблона для генерации номеров выпусков. */
    public var id: Int?
    /** Текст шаблона для генерации номеров выпусков . */
    public var text: String?
    public var emissionType: EmissionTypeEnum?
    public var numberType: EmissionNumberTypeEnum?
    public var state: EmissionTemplateState?

    public init(id: Int? = nil, text: String? = nil, emissionType: EmissionTypeEnum? = nil, numberType: EmissionNumberTypeEnum? = nil, state: EmissionTemplateState? = nil) {
        self.id = id
        self.text = text
        self.emissionType = emissionType
        self.numberType = numberType
        self.state = state
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case text
        case emissionType
        case numberType
        case state
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(text, forKey: .text)
        try container.encodeIfPresent(emissionType, forKey: .emissionType)
        try container.encodeIfPresent(numberType, forKey: .numberType)
        try container.encodeIfPresent(state, forKey: .state)
    }
}

