//
// DevicesForApplicationFilter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Модель касс для привязки к OAuth-приложениям. */
public struct DevicesForApplicationFilter: Codable, JSONEncodable, Hashable {

    /** Порядковый номер начального элемента выборки. */
    public var from: Int?
    /** Количество возвращаемых элементов выборки. */
    public var count: Int?
    /** Логическое имя кассы. */
    public var logicalId: String?
    /** Внутренний идентификатор OAuth-приложения. */
    public var oAuthApplicationId: Int?

    public init(from: Int? = nil, count: Int? = nil, logicalId: String? = nil, oAuthApplicationId: Int? = nil) {
        self.from = from
        self.count = count
        self.logicalId = logicalId
        self.oAuthApplicationId = oAuthApplicationId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case from
        case count
        case logicalId
        case oAuthApplicationId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(from, forKey: .from)
        try container.encodeIfPresent(count, forKey: .count)
        try container.encodeIfPresent(logicalId, forKey: .logicalId)
        try container.encodeIfPresent(oAuthApplicationId, forKey: .oAuthApplicationId)
    }
}

