//
// ReplacePersonCardModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Модель для замены карты Участника ПЛ. Перед заменой карта должна быть заблокирована. */
public struct ReplacePersonCardModel: Codable, JSONEncodable, Hashable {

    /** Внутренний идентификатор карты Участника ПЛ, которую необходимо заменить. */
    public var oldCardId: Int?
    /** Внутренний идентификатор новой карты Участника ПЛ. */
    public var newCardId: Int?
    /** CVC-код (при наличии). */
    public var cvcCode: String?

    public init(oldCardId: Int? = nil, newCardId: Int? = nil, cvcCode: String? = nil) {
        self.oldCardId = oldCardId
        self.newCardId = newCardId
        self.cvcCode = cvcCode
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case oldCardId
        case newCardId
        case cvcCode
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(oldCardId, forKey: .oldCardId)
        try container.encodeIfPresent(newCardId, forKey: .newCardId)
        try container.encodeIfPresent(cvcCode, forKey: .cvcCode)
    }
}

