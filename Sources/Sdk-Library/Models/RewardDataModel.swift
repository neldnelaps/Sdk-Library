//
// RewardDataModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** ViewModel данных о вознаграждении. */
public struct RewardDataModel: Codable, JSONEncodable, Hashable {

    public var amount: MoneyViewModel?
    /** Распределение изменения баланса по позициям. */
    public var positionInfo: [KeyValuePairOfInt32AndDecimal]?
    /** Идентификатор акции. */
    public var offerExternalId: String?
    public var rewardType: RewardDataType?
    /** Описание вознаграждения. */
    public var description: String?

    public init(amount: MoneyViewModel? = nil, positionInfo: [KeyValuePairOfInt32AndDecimal]? = nil, offerExternalId: String? = nil, rewardType: RewardDataType? = nil, description: String? = nil) {
        self.amount = amount
        self.positionInfo = positionInfo
        self.offerExternalId = offerExternalId
        self.rewardType = rewardType
        self.description = description
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case amount
        case positionInfo
        case offerExternalId
        case rewardType
        case description
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(amount, forKey: .amount)
        try container.encodeIfPresent(positionInfo, forKey: .positionInfo)
        try container.encodeIfPresent(offerExternalId, forKey: .offerExternalId)
        try container.encodeIfPresent(rewardType, forKey: .rewardType)
        try container.encodeIfPresent(description, forKey: .description)
    }
}

