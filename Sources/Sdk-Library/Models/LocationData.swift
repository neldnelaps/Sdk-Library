//
// LocationData.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct LocationData: Codable, JSONEncodable, Hashable {

    public var id: Int?
    public var locationId: UUID?
    public var latitude: Double?
    public var longitude: Double?
    public var city: CityData?
    public var street: String?
    public var house: String?
    public var building: String?
    public var office: String?
    public var addressDescription: String?

    public init(id: Int? = nil, locationId: UUID? = nil, latitude: Double? = nil, longitude: Double? = nil, city: CityData? = nil, street: String? = nil, house: String? = nil, building: String? = nil, office: String? = nil, addressDescription: String? = nil) {
        self.id = id
        self.locationId = locationId
        self.latitude = latitude
        self.longitude = longitude
        self.city = city
        self.street = street
        self.house = house
        self.building = building
        self.office = office
        self.addressDescription = addressDescription
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case locationId
        case latitude
        case longitude
        case city
        case street
        case house
        case building
        case office
        case addressDescription
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(locationId, forKey: .locationId)
        try container.encodeIfPresent(latitude, forKey: .latitude)
        try container.encodeIfPresent(longitude, forKey: .longitude)
        try container.encodeIfPresent(city, forKey: .city)
        try container.encodeIfPresent(street, forKey: .street)
        try container.encodeIfPresent(house, forKey: .house)
        try container.encodeIfPresent(building, forKey: .building)
        try container.encodeIfPresent(office, forKey: .office)
        try container.encodeIfPresent(addressDescription, forKey: .addressDescription)
    }
}

