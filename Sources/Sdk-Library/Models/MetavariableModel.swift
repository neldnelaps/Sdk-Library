//
// MetavariableModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Метапеременная. */
public struct MetavariableModel: Codable, JSONEncodable, Hashable {

    public var type: MetavariableTypes?
    /** Ключ. */
    public var key: String?
    /** Значение. */
    public var value: String?
    /** Отображаемое значение. */
    public var showValue: String?
    /** Заголовок. */
    public var title: String?

    public init(type: MetavariableTypes? = nil, key: String? = nil, value: String? = nil, showValue: String? = nil, title: String? = nil) {
        self.type = type
        self.key = key
        self.value = value
        self.showValue = showValue
        self.title = title
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case key
        case value
        case showValue
        case title
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(key, forKey: .key)
        try container.encodeIfPresent(value, forKey: .value)
        try container.encodeIfPresent(showValue, forKey: .showValue)
        try container.encodeIfPresent(title, forKey: .title)
    }
}

