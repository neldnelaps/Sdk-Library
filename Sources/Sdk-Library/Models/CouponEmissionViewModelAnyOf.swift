//
// CouponEmissionViewModelAnyOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CouponEmissionViewModelAnyOf: Codable, JSONEncodable, Hashable {

    /** Идентификатор. */
    public var id: Int?
    /** Название выпуска. */
    public var title: String?
    /** Время создания. */
    public var creationDate: Date?
    /** Время старта. */
    public var startDate: Date?
    /** Время когдя истекает купон. */
    public var expiresDate: Date?
    public var price: MoneyViewModel?
    /** Количество купонов в эмиссии в разрезе состояний. */
    public var counts: [KeyValuePairOfCouponStateAndInt32]?
    /** Короткое описание. */
    public var shortDescription: String?
    /** Описание. */
    public var description: String?
    public var imageFile: FileViewModel?

    public init(id: Int? = nil, title: String? = nil, creationDate: Date? = nil, startDate: Date? = nil, expiresDate: Date? = nil, price: MoneyViewModel? = nil, counts: [KeyValuePairOfCouponStateAndInt32]? = nil, shortDescription: String? = nil, description: String? = nil, imageFile: FileViewModel? = nil) {
        self.id = id
        self.title = title
        self.creationDate = creationDate
        self.startDate = startDate
        self.expiresDate = expiresDate
        self.price = price
        self.counts = counts
        self.shortDescription = shortDescription
        self.description = description
        self.imageFile = imageFile
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case title
        case creationDate
        case startDate
        case expiresDate
        case price
        case counts
        case shortDescription
        case description
        case imageFile
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(creationDate, forKey: .creationDate)
        try container.encodeIfPresent(startDate, forKey: .startDate)
        try container.encodeIfPresent(expiresDate, forKey: .expiresDate)
        try container.encodeIfPresent(price, forKey: .price)
        try container.encodeIfPresent(counts, forKey: .counts)
        try container.encodeIfPresent(shortDescription, forKey: .shortDescription)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(imageFile, forKey: .imageFile)
    }
}

