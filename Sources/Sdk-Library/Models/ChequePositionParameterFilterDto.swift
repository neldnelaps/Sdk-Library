//
// ChequePositionParameterFilterDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Фильтр \&quot;Дополнительная информация по чековой позиции\&quot;. */
public struct ChequePositionParameterFilterDto: Codable, JSONEncodable, Hashable {

    /** Имя фильтра. */
    public var name: String?
    /** Параметры обработки. */
    public var processParameters: String?
    /** Имя параметра. */
    public var parameterName: String?
    /** Ожидаемые значения параметра. */
    public var expectedValues: [String]?
    /** Отрицание (значение параметра не должно быть среди ожидаемых). */
    public var isNegative: Bool?

    public init(name: String? = nil, processParameters: String? = nil, parameterName: String? = nil, expectedValues: [String]? = nil, isNegative: Bool? = nil) {
        self.name = name
        self.processParameters = processParameters
        self.parameterName = parameterName
        self.expectedValues = expectedValues
        self.isNegative = isNegative
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case processParameters
        case parameterName
        case expectedValues
        case isNegative
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(processParameters, forKey: .processParameters)
        try container.encodeIfPresent(parameterName, forKey: .parameterName)
        try container.encodeIfPresent(expectedValues, forKey: .expectedValues)
        try container.encodeIfPresent(isNegative, forKey: .isNegative)
    }
}

