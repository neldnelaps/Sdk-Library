//
// NewGoodsGroupDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Новая группа товаров. */
public struct NewGoodsGroupDto: Codable, JSONEncodable, Hashable {

    /** Id создаваемой группы. */
    public var id: String?
    /** Название группы. */
    public var name: String?
    /** Id каталога. */
    public var catalogId: UUID?
    public var goodsGroupState: GoodsGroupState?
    /** Включаемые товары. */
    public var includeItems: [String]?
    /** Исключаемые товары. */
    public var excludeItems: [String]?

    public init(id: String? = nil, name: String? = nil, catalogId: UUID? = nil, goodsGroupState: GoodsGroupState? = nil, includeItems: [String]? = nil, excludeItems: [String]? = nil) {
        self.id = id
        self.name = name
        self.catalogId = catalogId
        self.goodsGroupState = goodsGroupState
        self.includeItems = includeItems
        self.excludeItems = excludeItems
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case catalogId
        case goodsGroupState
        case includeItems
        case excludeItems
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(catalogId, forKey: .catalogId)
        try container.encodeIfPresent(goodsGroupState, forKey: .goodsGroupState)
        try container.encodeIfPresent(includeItems, forKey: .includeItems)
        try container.encodeIfPresent(excludeItems, forKey: .excludeItems)
    }
}

