//
// DeviceTypeFilter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Фильтр типов касс. */
public struct DeviceTypeFilter: Codable, JSONEncodable, Hashable {

    /** Текст поиска. */
    public var searchedText: String?
    public var version: XmlVersion?
    public var condition: ArchivedState?
    public var encodingType: DeviceTypeValidEncodingType?
    /** Идентификаторы типов касс, выводимых в начале списка. */
    public var sortingIds: [Int]?

    public init(searchedText: String? = nil, version: XmlVersion? = nil, condition: ArchivedState? = nil, encodingType: DeviceTypeValidEncodingType? = nil, sortingIds: [Int]? = nil) {
        self.searchedText = searchedText
        self.version = version
        self.condition = condition
        self.encodingType = encodingType
        self.sortingIds = sortingIds
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case searchedText
        case version
        case condition
        case encodingType
        case sortingIds
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(searchedText, forKey: .searchedText)
        try container.encodeIfPresent(version, forKey: .version)
        try container.encodeIfPresent(condition, forKey: .condition)
        try container.encodeIfPresent(encodingType, forKey: .encodingType)
        try container.encodeIfPresent(sortingIds, forKey: .sortingIds)
    }
}

