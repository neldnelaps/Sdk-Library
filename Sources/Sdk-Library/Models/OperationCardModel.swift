//
// OperationCardModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Модель представления для операции по карте. */
public struct OperationCardModel: Codable, JSONEncodable, Hashable {

    public var identifierType: IdentifierType?
    /** Значение идентификатора клиента. */
    public var identifier: String?
    /** Описание операции. */
    public var description: String?
    /** Сумма начисления/списания. */
    public var amount: Double?
    /** Внешний идентификатор начисления/списания. */
    public var externalInfo: String?
    /** Номер карты. */
    public var cardNumber: String?

    public init(identifierType: IdentifierType? = nil, identifier: String? = nil, description: String? = nil, amount: Double? = nil, externalInfo: String? = nil, cardNumber: String? = nil) {
        self.identifierType = identifierType
        self.identifier = identifier
        self.description = description
        self.amount = amount
        self.externalInfo = externalInfo
        self.cardNumber = cardNumber
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case identifierType
        case identifier
        case description
        case amount
        case externalInfo
        case cardNumber
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(identifierType, forKey: .identifierType)
        try container.encodeIfPresent(identifier, forKey: .identifier)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(amount, forKey: .amount)
        try container.encodeIfPresent(externalInfo, forKey: .externalInfo)
        try container.encodeIfPresent(cardNumber, forKey: .cardNumber)
    }
}

