//
// QuestionFilter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct QuestionFilter: Codable, JSONEncodable, Hashable {

    public var name: String?
    public var logicalName: String?
    public var stateType: ArchivedState?
    public var visibleType: VisibilityType?
    public var requiredType: QuestionRequiredType?
    public var isEmpty: Bool?

    public init(name: String? = nil, logicalName: String? = nil, stateType: ArchivedState? = nil, visibleType: VisibilityType? = nil, requiredType: QuestionRequiredType? = nil, isEmpty: Bool? = nil) {
        self.name = name
        self.logicalName = logicalName
        self.stateType = stateType
        self.visibleType = visibleType
        self.requiredType = requiredType
        self.isEmpty = isEmpty
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case logicalName
        case stateType
        case visibleType
        case requiredType
        case isEmpty
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(logicalName, forKey: .logicalName)
        try container.encodeIfPresent(stateType, forKey: .stateType)
        try container.encodeIfPresent(visibleType, forKey: .visibleType)
        try container.encodeIfPresent(requiredType, forKey: .requiredType)
        try container.encodeIfPresent(isEmpty, forKey: .isEmpty)
    }
}

