//
// AcceptPersonalDataProcessingViewModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Информация о согласии Клиента на обработку персональных данных. */
public struct AcceptPersonalDataProcessingViewModel: Codable, JSONEncodable, Hashable {

    /** Дата получения согласия на обработку персональных данных. */
    public var acceptPersonalDataProcessingDate: Date?
    public var acceptPersonalDataProcessingType: CustomerActionType?
    /** Источник получения согласия. */
    public var acceptPersonalDataProcessingTypeSourceId: String?

    public init(acceptPersonalDataProcessingDate: Date? = nil, acceptPersonalDataProcessingType: CustomerActionType? = nil, acceptPersonalDataProcessingTypeSourceId: String? = nil) {
        self.acceptPersonalDataProcessingDate = acceptPersonalDataProcessingDate
        self.acceptPersonalDataProcessingType = acceptPersonalDataProcessingType
        self.acceptPersonalDataProcessingTypeSourceId = acceptPersonalDataProcessingTypeSourceId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case acceptPersonalDataProcessingDate
        case acceptPersonalDataProcessingType
        case acceptPersonalDataProcessingTypeSourceId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(acceptPersonalDataProcessingDate, forKey: .acceptPersonalDataProcessingDate)
        try container.encodeIfPresent(acceptPersonalDataProcessingType, forKey: .acceptPersonalDataProcessingType)
        try container.encodeIfPresent(acceptPersonalDataProcessingTypeSourceId, forKey: .acceptPersonalDataProcessingTypeSourceId)
    }
}

