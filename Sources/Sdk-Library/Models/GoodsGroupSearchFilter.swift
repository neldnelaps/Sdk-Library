//
// GoodsGroupSearchFilter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct GoodsGroupSearchFilter: Codable, JSONEncodable, Hashable {

    public var dateFrom: Date?
    public var dateTo: Date?
    public var creatorIds: [Int]?
    public var partnerIds: [String]?
    public var archivedShowMode: ArchivedState?
    public var name: String?
    public var dateFromLastChange: Date?

    public init(dateFrom: Date? = nil, dateTo: Date? = nil, creatorIds: [Int]? = nil, partnerIds: [String]? = nil, archivedShowMode: ArchivedState? = nil, name: String? = nil, dateFromLastChange: Date? = nil) {
        self.dateFrom = dateFrom
        self.dateTo = dateTo
        self.creatorIds = creatorIds
        self.partnerIds = partnerIds
        self.archivedShowMode = archivedShowMode
        self.name = name
        self.dateFromLastChange = dateFromLastChange
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case dateFrom
        case dateTo
        case creatorIds
        case partnerIds
        case archivedShowMode
        case name
        case dateFromLastChange
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(dateFrom, forKey: .dateFrom)
        try container.encodeIfPresent(dateTo, forKey: .dateTo)
        try container.encodeIfPresent(creatorIds, forKey: .creatorIds)
        try container.encodeIfPresent(partnerIds, forKey: .partnerIds)
        try container.encodeIfPresent(archivedShowMode, forKey: .archivedShowMode)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(dateFromLastChange, forKey: .dateFromLastChange)
    }
}

