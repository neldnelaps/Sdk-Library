//
// OperationsViewModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Модель операции по покупке. */
public struct OperationsViewModel: Codable, JSONEncodable, Hashable {

    public var cardNumber: CardViewModel?
    public var giftCertificateIdentifier: GiftCertificateIdentifierModel?
    /** Количество средств. */
    public var amounts: [MoneyViewModel]?
    public var state: OperationState?
    /** Время операции. */
    public var operationTime: Date?
    /** Дата создания. */
    public var creationDate: Date?
    public var type: OperationsType?
    /** Описание операции. */
    public var description: String?
    /** Ид пользователя связанный с операцией. */
    public var personIdentifier: String?

    public init(cardNumber: CardViewModel? = nil, giftCertificateIdentifier: GiftCertificateIdentifierModel? = nil, amounts: [MoneyViewModel]? = nil, state: OperationState? = nil, operationTime: Date? = nil, creationDate: Date? = nil, type: OperationsType? = nil, description: String? = nil, personIdentifier: String? = nil) {
        self.cardNumber = cardNumber
        self.giftCertificateIdentifier = giftCertificateIdentifier
        self.amounts = amounts
        self.state = state
        self.operationTime = operationTime
        self.creationDate = creationDate
        self.type = type
        self.description = description
        self.personIdentifier = personIdentifier
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case cardNumber
        case giftCertificateIdentifier
        case amounts
        case state
        case operationTime
        case creationDate
        case type
        case description
        case personIdentifier
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(cardNumber, forKey: .cardNumber)
        try container.encodeIfPresent(giftCertificateIdentifier, forKey: .giftCertificateIdentifier)
        try container.encodeIfPresent(amounts, forKey: .amounts)
        try container.encodeIfPresent(state, forKey: .state)
        try container.encodeIfPresent(operationTime, forKey: .operationTime)
        try container.encodeIfPresent(creationDate, forKey: .creationDate)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(personIdentifier, forKey: .personIdentifier)
    }
}

