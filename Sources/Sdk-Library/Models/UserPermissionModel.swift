//
// UserPermissionModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Модель для прав идентификатора. */
public struct UserPermissionModel: Codable, JSONEncodable, Hashable {

    /** Право доступа. */
    public var permission: String?
    /** Партнеры. */
    public var partnerIds: [Int]?
    /** Разрешающее или запрещающее право. */
    public var isAllow: Bool?

    public init(permission: String? = nil, partnerIds: [Int]? = nil, isAllow: Bool? = nil) {
        self.permission = permission
        self.partnerIds = partnerIds
        self.isAllow = isAllow
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case permission
        case partnerIds
        case isAllow
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(permission, forKey: .permission)
        try container.encodeIfPresent(partnerIds, forKey: .partnerIds)
        try container.encodeIfPresent(isAllow, forKey: .isAllow)
    }
}

