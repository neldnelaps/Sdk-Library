//
// ChainModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Фильтр для списка счетов кассы. */
public struct ChainModel: Codable, JSONEncodable, Hashable {

    /** Идентификатор. */
    public var id: Int?
    /** Наименование. */
    public var name: String?
    /** Не выполнено, так как контекст пуст, или ещё чего. */
    public var _break: Bool?
    /** Пришедшие позиции. */
    public var positions: [PositionModel]?
    /** Фильтры. */
    public var filters: [FilterModel]?
    /** Список действий. */
    public var actions: [ActionModel]?
    /** Длительность расчета в миллисекундах. */
    public var calculationDuration: Double?

    public init(id: Int? = nil, name: String? = nil, _break: Bool? = nil, positions: [PositionModel]? = nil, filters: [FilterModel]? = nil, actions: [ActionModel]? = nil, calculationDuration: Double? = nil) {
        self.id = id
        self.name = name
        self._break = _break
        self.positions = positions
        self.filters = filters
        self.actions = actions
        self.calculationDuration = calculationDuration
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case _break = "break"
        case positions
        case filters
        case actions
        case calculationDuration
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(_break, forKey: ._break)
        try container.encodeIfPresent(positions, forKey: .positions)
        try container.encodeIfPresent(filters, forKey: .filters)
        try container.encodeIfPresent(actions, forKey: .actions)
        try container.encodeIfPresent(calculationDuration, forKey: .calculationDuration)
    }
}

