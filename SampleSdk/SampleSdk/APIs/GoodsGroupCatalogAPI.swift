//
// GoodsGroupCatalogAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class GoodsGroupCatalogAPI {

    /**
     Получить иерархию каталога товаров от корневого элемента до отфильтрованных, состоящих в группе товаров.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter from: (query) Индекс первого элемента выборки. (optional)
     - parameter count: (query) Количество элементов удовлетворяющих фильтру. (optional)
     - parameter filterSearchedText: (query) Значение параметра товара. (optional)
     - parameter filterSearchParameter: (query) Параметр товара, по которому выполняется поиск (Name - название, ItemID - внутренний идентификатор, BarCode - штрихкод). (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupCatalogGetCatalogHierarchyToFilteredGoodsGroupCatalogItems(goodsGroupId: Int, from: Int? = nil, count: Int? = nil, filterSearchedText: String? = nil, filterSearchParameter: GoodsCatalogSearchParameter? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupCatalogGetCatalogHierarchyToFilteredGoodsGroupCatalogItemsWithRequestBuilder(goodsGroupId: goodsGroupId, from: from, count: count, filterSearchedText: filterSearchedText, filterSearchParameter: filterSearchParameter).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить иерархию каталога товаров от корневого элемента до отфильтрованных, состоящих в группе товаров.
     - GET /v1.2/goodsGroups/{goodsGroupId}/catalog/search
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter from: (query) Индекс первого элемента выборки. (optional)
     - parameter count: (query) Количество элементов удовлетворяющих фильтру. (optional)
     - parameter filterSearchedText: (query) Значение параметра товара. (optional)
     - parameter filterSearchParameter: (query) Параметр товара, по которому выполняется поиск (Name - название, ItemID - внутренний идентификатор, BarCode - штрихкод). (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> 
     */
    open class func goodsGroupCatalogGetCatalogHierarchyToFilteredGoodsGroupCatalogItemsWithRequestBuilder(goodsGroupId: Int, from: Int? = nil, count: Int? = nil, filterSearchedText: String? = nil, filterSearchParameter: GoodsCatalogSearchParameter? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/catalog/search"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
            "filter.searchedText": filterSearchedText?.encodeToJSON(),
            "filter.searchParameter": filterSearchParameter?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить каталог товаров, состоящих в наборах группы товаров.
     
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter parentNodeId: (query) Id родительского узла. (optional)
     - parameter from: (query) Индекс первого элемента выборки. (optional)
     - parameter count: (query) Количество элементов. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func goodsGroupCatalogGetGoodsGroupCatalog(goodsGroupId: Int, parentNodeId: Int? = nil, from: Int? = nil, count: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel?, _ error: Error?) -> Void)) -> RequestTask {
        return goodsGroupCatalogGetGoodsGroupCatalogWithRequestBuilder(goodsGroupId: goodsGroupId, parentNodeId: parentNodeId, from: from, count: count).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить каталог товаров, состоящих в наборах группы товаров.
     - GET /v1.2/goodsGroups/{goodsGroupId}/catalog
     - parameter goodsGroupId: (path) Id группы товаров. 
     - parameter parentNodeId: (query) Id родительского узла. (optional)
     - parameter from: (query) Индекс первого элемента выборки. (optional)
     - parameter count: (query) Количество элементов. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> 
     */
    open class func goodsGroupCatalogGetGoodsGroupCatalogWithRequestBuilder(goodsGroupId: Int, parentNodeId: Int? = nil, from: Int? = nil, count: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel> {
        var localVariablePath = "/v1.2/goodsGroups/{goodsGroupId}/catalog"
        let goodsGroupIdPreEscape = "\(APIHelper.mapValueToPathItem(goodsGroupId))"
        let goodsGroupIdPostEscape = goodsGroupIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{goodsGroupId}", with: goodsGroupIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "parentNodeId": parentNodeId?.encodeToJSON(),
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfGoodsCatalogBaseViewModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
