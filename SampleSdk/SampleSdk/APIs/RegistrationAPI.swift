//
// RegistrationAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class RegistrationAPI {

    /**
     Регистрация по номеру карты.
     
     - parameter model: (query) Данные для регистрации. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func registrationPostBeginRegistration(model: RegistrationModel, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfRegistrationResult?, _ error: Error?) -> Void)) -> RequestTask {
        return registrationPostBeginRegistrationWithRequestBuilder(model: model).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Регистрация по номеру карты.
     - POST /v1.2/Registration/BeginRegistration
     - parameter model: (query) Данные для регистрации. 
     - returns: RequestBuilder<ResultModelOfRegistrationResult> 
     */
    open class func registrationPostBeginRegistrationWithRequestBuilder(model: RegistrationModel) -> RequestBuilder<ResultModelOfRegistrationResult> {
        let localVariablePath = "/v1.2/Registration/BeginRegistration"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "model": model.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfRegistrationResult>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Попробовать закончить активацию.
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func registrationPostTryFinishRegistration(apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfFinishRegistrationResultModel?, _ error: Error?) -> Void)) -> RequestTask {
        return registrationPostTryFinishRegistrationWithRequestBuilder().execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Попробовать закончить активацию.
     - POST /v1.2/Registration/TryFinishRegistration
     - returns: RequestBuilder<ResultModelOfFinishRegistrationResultModel> 
     */
    open class func registrationPostTryFinishRegistrationWithRequestBuilder() -> RequestBuilder<ResultModelOfFinishRegistrationResultModel> {
        let localVariablePath = "/v1.2/Registration/TryFinishRegistration"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfFinishRegistrationResultModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Анонимная регистрация пользователя.
     
     - parameter model: (query) Данные для анонимной регистрации. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func registrationRegisterAnonymous(model: AnonymousRegistrationModel, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfAnonymousRegistrationResult?, _ error: Error?) -> Void)) -> RequestTask {
        return registrationRegisterAnonymousWithRequestBuilder(model: model).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Анонимная регистрация пользователя.
     - POST /v1.2/Registration/RegisterAnonym
     - parameter model: (query) Данные для анонимной регистрации. 
     - returns: RequestBuilder<ResultModelOfAnonymousRegistrationResult> 
     */
    open class func registrationRegisterAnonymousWithRequestBuilder(model: AnonymousRegistrationModel) -> RequestBuilder<ResultModelOfAnonymousRegistrationResult> {
        let localVariablePath = "/v1.2/Registration/RegisterAnonym"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "model": model.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfAnonymousRegistrationResult>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
