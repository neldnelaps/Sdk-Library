//
// OfferAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class OfferAPI {

    /**
     Получить детали рекламного материала.
     
     - parameter offerId: (path) Идентификатор рекламного материала. 
     - parameter detailId: (path) Идентификатор детали. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func offerGetDetail(offerId: Int, detailId: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfDetailItem?, _ error: Error?) -> Void)) -> RequestTask {
        return offerGetDetailWithRequestBuilder(offerId: offerId, detailId: detailId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить детали рекламного материала.
     - GET /v1.2/Offer/{offerId}/details/{detailId}
     - parameter offerId: (path) Идентификатор рекламного материала. 
     - parameter detailId: (path) Идентификатор детали. 
     - returns: RequestBuilder<ResultModelOfDetailItem> 
     */
    open class func offerGetDetailWithRequestBuilder(offerId: Int, detailId: String) -> RequestBuilder<ResultModelOfDetailItem> {
        var localVariablePath = "/v1.2/Offer/{offerId}/details/{detailId}"
        let offerIdPreEscape = "\(APIHelper.mapValueToPathItem(offerId))"
        let offerIdPostEscape = offerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{offerId}", with: offerIdPostEscape, options: .literal, range: nil)
        let detailIdPreEscape = "\(APIHelper.mapValueToPathItem(detailId))"
        let detailIdPostEscape = detailIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{detailId}", with: detailIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfDetailItem>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить магазины детали рекламного материала.
     
     - parameter offerId: (path) Идентификатор рекламного материала. 
     - parameter detailId: (path) Идентификатор детали. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func offerGetDetailMerchants(offerId: Int, detailId: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfMerchantInfoModel?, _ error: Error?) -> Void)) -> RequestTask {
        return offerGetDetailMerchantsWithRequestBuilder(offerId: offerId, detailId: detailId).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить магазины детали рекламного материала.
     - GET /v1.2/Offer/{offerId}/details/{detailId}/merchants
     - parameter offerId: (path) Идентификатор рекламного материала. 
     - parameter detailId: (path) Идентификатор детали. 
     - returns: RequestBuilder<ResultModelOfListOfMerchantInfoModel> 
     */
    open class func offerGetDetailMerchantsWithRequestBuilder(offerId: Int, detailId: String) -> RequestBuilder<ResultModelOfListOfMerchantInfoModel> {
        var localVariablePath = "/v1.2/Offer/{offerId}/details/{detailId}/merchants"
        let offerIdPreEscape = "\(APIHelper.mapValueToPathItem(offerId))"
        let offerIdPostEscape = offerIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{offerId}", with: offerIdPostEscape, options: .literal, range: nil)
        let detailIdPreEscape = "\(APIHelper.mapValueToPathItem(detailId))"
        let detailIdPostEscape = detailIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{detailId}", with: detailIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfMerchantInfoModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить детали рекламного материала.
     
     - parameter id: (path) Идентификатор рекламного материала. 
     - parameter from: (query) Индекс начального элемена. (optional)
     - parameter count: (query) Количество. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func offerGetDetails(id: Int, from: Int? = nil, count: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfDetailItem?, _ error: Error?) -> Void)) -> RequestTask {
        return offerGetDetailsWithRequestBuilder(id: id, from: from, count: count).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить детали рекламного материала.
     - GET /v1.2/Offer/{id}/details
     - parameter id: (path) Идентификатор рекламного материала. 
     - parameter from: (query) Индекс начального элемена. (optional)
     - parameter count: (query) Количество. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfDetailItem> 
     */
    open class func offerGetDetailsWithRequestBuilder(id: Int, from: Int? = nil, count: Int? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfDetailItem> {
        var localVariablePath = "/v1.2/Offer/{id}/details"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from?.encodeToJSON(),
            "count": count?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfDetailItem>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить рекламный материал по идентификатору.
     
     - parameter id: (path) Идентификатор. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func offerGetOffer(id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfOfferModel?, _ error: Error?) -> Void)) -> RequestTask {
        return offerGetOfferWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить рекламный материал по идентификатору.
     - GET /v1.2/Offer/{id}
     - parameter id: (path) Идентификатор. 
     - returns: RequestBuilder<ResultModelOfOfferModel> 
     */
    open class func offerGetOfferWithRequestBuilder(id: Int) -> RequestBuilder<ResultModelOfOfferModel> {
        var localVariablePath = "/v1.2/Offer/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfOfferModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить магазины рекламных материалов.
     
     - parameter id: (path) Идентификатор. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func offerGetOfferMerchants(id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfListOfMerchantInfoModel?, _ error: Error?) -> Void)) -> RequestTask {
        return offerGetOfferMerchantsWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить магазины рекламных материалов.
     - GET /v1.2/Offer/{id}/merchants
     - parameter id: (path) Идентификатор. 
     - returns: RequestBuilder<ResultModelOfListOfMerchantInfoModel> 
     */
    open class func offerGetOfferMerchantsWithRequestBuilder(id: Int) -> RequestBuilder<ResultModelOfListOfMerchantInfoModel> {
        var localVariablePath = "/v1.2/Offer/{id}/merchants"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfListOfMerchantInfoModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Получить рекламные материалы.
     
     - parameter filterMerchantId: (query) Id магазина. (optional)
     - parameter filterOfferState: (query) Статус акции. (optional)
     - parameter filterFrom: (query) Со скольки. (optional)
     - parameter filterCount: (query) Сколько. (optional)
     - parameter filterType: (query) Тип акции. (optional)
     - parameter filterCategoryFilterType: (query) Фильтр по категории. (optional)
     - parameter filterCategoryLogicalNames: (query) Логические имена категорий. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func offerGetOffers(filterMerchantId: Int? = nil, filterOfferState: OfferState? = nil, filterFrom: Int? = nil, filterCount: Int? = nil, filterType: CommunicationOfferType? = nil, filterCategoryFilterType: OfferCategoryFilterType? = nil, filterCategoryLogicalNames: [String]? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ResultModelOfPagedViewModelOfOfferModel?, _ error: Error?) -> Void)) -> RequestTask {
        return offerGetOffersWithRequestBuilder(filterMerchantId: filterMerchantId, filterOfferState: filterOfferState, filterFrom: filterFrom, filterCount: filterCount, filterType: filterType, filterCategoryFilterType: filterCategoryFilterType, filterCategoryLogicalNames: filterCategoryLogicalNames).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получить рекламные материалы.
     - GET /v1.2/Offer
     - parameter filterMerchantId: (query) Id магазина. (optional)
     - parameter filterOfferState: (query) Статус акции. (optional)
     - parameter filterFrom: (query) Со скольки. (optional)
     - parameter filterCount: (query) Сколько. (optional)
     - parameter filterType: (query) Тип акции. (optional)
     - parameter filterCategoryFilterType: (query) Фильтр по категории. (optional)
     - parameter filterCategoryLogicalNames: (query) Логические имена категорий. (optional)
     - returns: RequestBuilder<ResultModelOfPagedViewModelOfOfferModel> 
     */
    open class func offerGetOffersWithRequestBuilder(filterMerchantId: Int? = nil, filterOfferState: OfferState? = nil, filterFrom: Int? = nil, filterCount: Int? = nil, filterType: CommunicationOfferType? = nil, filterCategoryFilterType: OfferCategoryFilterType? = nil, filterCategoryLogicalNames: [String]? = nil) -> RequestBuilder<ResultModelOfPagedViewModelOfOfferModel> {
        let localVariablePath = "/v1.2/Offer"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "filter.merchantId": filterMerchantId?.encodeToJSON(),
            "filter.offerState": filterOfferState?.encodeToJSON(),
            "filter.from": filterFrom?.encodeToJSON(),
            "filter.count": filterCount?.encodeToJSON(),
            "filter.type": filterType?.encodeToJSON(),
            "filter.categoryFilterType": filterCategoryFilterType?.encodeToJSON(),
            "filter.categoryLogicalNames": filterCategoryLogicalNames?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<ResultModelOfPagedViewModelOfOfferModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
