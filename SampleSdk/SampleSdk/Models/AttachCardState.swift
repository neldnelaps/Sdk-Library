//
// AttachCardState.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Состояние процесса присоединения карты. */
public struct AttachCardState: Codable, JSONEncodable, Hashable {

    /** Номер присоединяемой карты. */
    public var cardNumber: String?
    /** Начат ли процесс. */
    public var isStarted: Bool?
    /** Максимальное число карт, которые может присоединить пользователь. */
    public var maxCountOfCards: Int?
    /** Текущее число присоедиенных карт. */
    public var currentCountOfAttachedCards: Int?
    /** Максимальное число пользователей в группе. */
    public var maximumPersonCountForGroup: Int?
    /** Текущее число пользователей в группе. */
    public var currentPersonCountInGroup: Int?

    public init(cardNumber: String? = nil, isStarted: Bool? = nil, maxCountOfCards: Int? = nil, currentCountOfAttachedCards: Int? = nil, maximumPersonCountForGroup: Int? = nil, currentPersonCountInGroup: Int? = nil) {
        self.cardNumber = cardNumber
        self.isStarted = isStarted
        self.maxCountOfCards = maxCountOfCards
        self.currentCountOfAttachedCards = currentCountOfAttachedCards
        self.maximumPersonCountForGroup = maximumPersonCountForGroup
        self.currentPersonCountInGroup = currentPersonCountInGroup
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case cardNumber
        case isStarted
        case maxCountOfCards
        case currentCountOfAttachedCards
        case maximumPersonCountForGroup
        case currentPersonCountInGroup
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(cardNumber, forKey: .cardNumber)
        try container.encodeIfPresent(isStarted, forKey: .isStarted)
        try container.encodeIfPresent(maxCountOfCards, forKey: .maxCountOfCards)
        try container.encodeIfPresent(currentCountOfAttachedCards, forKey: .currentCountOfAttachedCards)
        try container.encodeIfPresent(maximumPersonCountForGroup, forKey: .maximumPersonCountForGroup)
        try container.encodeIfPresent(currentPersonCountInGroup, forKey: .currentPersonCountInGroup)
    }
}

