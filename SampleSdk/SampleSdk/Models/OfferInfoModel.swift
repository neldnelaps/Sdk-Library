//
// OfferInfoModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Информация об акции. */
public struct OfferInfoModel: Codable, JSONEncodable, Hashable {

    /** Идентификатор. */
    public var id: Int?
    /** Идентификатор версии. */
    public var versionId: Int?
    /** Наименование. */
    public var name: String?
    /** Размер преференций. */
    public var prerefenceValue: Double?
    /** Размер позиции. */
    public var quantity: Double?
    /** Сокражённое наименование валюты. */
    public var currencyAbbreviation: String?

    public init(id: Int? = nil, versionId: Int? = nil, name: String? = nil, prerefenceValue: Double? = nil, quantity: Double? = nil, currencyAbbreviation: String? = nil) {
        self.id = id
        self.versionId = versionId
        self.name = name
        self.prerefenceValue = prerefenceValue
        self.quantity = quantity
        self.currencyAbbreviation = currencyAbbreviation
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case versionId
        case name
        case prerefenceValue
        case quantity
        case currencyAbbreviation
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(versionId, forKey: .versionId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(prerefenceValue, forKey: .prerefenceValue)
        try container.encodeIfPresent(quantity, forKey: .quantity)
        try container.encodeIfPresent(currencyAbbreviation, forKey: .currencyAbbreviation)
    }
}

