//
// ErrorCode.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Код ответа. */
public enum ErrorCode: String, Codable, CaseIterable {
    case ok = "Ok"
    case systemError = "SystemError"
    case versionError = "VersionError"
    case parseError = "ParseError"
    case formatException = "FormatException"
    case requereFieldException = "RequereFieldException"
    case signatureError = "SignatureError"
    case signatureNotFound = "SignatureNotFound"
    case certificateError = "CertificateError"
    case cardNotFound = "CardNotFound"
    case deviceNotFound = "DeviceNotFound"
    case largePaymentAmount = "LargePaymentAmount"
    case notEnoughMoney = "NotEnoughMoney"
    case cardBlocked = "CardBlocked"
    case deviceBlocked = "DeviceBlocked"
    case notUniqueOperationID = "NotUniqueOperationID"
    case operationNotFound = "OperationNotFound"
    case operationIsConfirmed = "OperationIsConfirmed"
    case operationIsCanceled = "OperationIsCanceled"
    case wrongPin = "WrongPin"
    case cashierNotFound = "CashierNotFound"
    case cardHolderNotFound = "CardHolderNotFound"
    case cardNotActivated = "CardNotActivated"
    case discountException = "DiscountException"
    case purchaseNotFound = "PurchaseNotFound"
    case differentCheque = "DifferentCheque"
    case incorrectOperationOrder = "IncorrectOperationOrder"
    case cardExtraPayment = "CardExtraPayment"
    case confirmedPurchaseOperation = "ConfirmedPurchaseOperation"
    case purchaseExtraPayment = "PurchaseExtraPayment"
    case limitGained = "LimitGained"
    case paymentException = "PaymentException"
    case differentPurchase = "DifferentPurchase"
    case couponsException = "CouponsException"
    case businessError = "BusinessError"
    case applicationDeviceGrant = "ApplicationDeviceGrant"
    case notUniquePurchaseID = "NotUniquePurchaseID"
    case unspecifiedLoyaltyProgram = "UnspecifiedLoyaltyProgram"
    case divisibilityError = "DivisibilityError"
    case differentLegals = "DifferentLegals"
    case created = "Created"
    case payTypeIsNotExist = "PayTypeIsNotExist"
    case payTypeIsArchived = "PayTypeIsArchived"
    case cardExpired = "CardExpired"
    case giftCertificateError = "GiftCertificateError"
    case purchaseOperationConflict = "PurchaseOperationConflict"
}
