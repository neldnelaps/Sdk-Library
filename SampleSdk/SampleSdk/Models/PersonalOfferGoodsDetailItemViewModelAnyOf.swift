//
// PersonalOfferGoodsDetailItemViewModelAnyOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PersonalOfferGoodsDetailItemViewModelAnyOf: Codable, JSONEncodable, Hashable {

    public var discount: PersonalOfferDiscountViewModel?
    /** Коды товара. */
    public var codes: [PersonalOfferGoodsCodeViewModel]?
    /** Примечание. */
    public var annotation: String?
    /** Для детали определены магазины. */
    public var hasMerchants: Bool?
    /** Дата начала действия акции для детали. Если совпадает с акцией, то пусто. */
    public var detailBeginLocalDate: Date?
    /** Дата окончания действия акции для детали. Если совпадает с акцией, то пусто. */
    public var detailEndLocalDate: Date?

    public init(discount: PersonalOfferDiscountViewModel? = nil, codes: [PersonalOfferGoodsCodeViewModel]? = nil, annotation: String? = nil, hasMerchants: Bool? = nil, detailBeginLocalDate: Date? = nil, detailEndLocalDate: Date? = nil) {
        self.discount = discount
        self.codes = codes
        self.annotation = annotation
        self.hasMerchants = hasMerchants
        self.detailBeginLocalDate = detailBeginLocalDate
        self.detailEndLocalDate = detailEndLocalDate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case discount
        case codes
        case annotation
        case hasMerchants
        case detailBeginLocalDate
        case detailEndLocalDate
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(discount, forKey: .discount)
        try container.encodeIfPresent(codes, forKey: .codes)
        try container.encodeIfPresent(annotation, forKey: .annotation)
        try container.encodeIfPresent(hasMerchants, forKey: .hasMerchants)
        try container.encodeIfPresent(detailBeginLocalDate, forKey: .detailBeginLocalDate)
        try container.encodeIfPresent(detailEndLocalDate, forKey: .detailEndLocalDate)
    }
}

