//
// CouponBuyModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Модель покупки купона. */
public struct CouponBuyModel: Codable, JSONEncodable, Hashable {

    /** Id транзакции покупки витрины. */
    public var id: String?
    /** Отображаемый текст типа купона. */
    public var couponText: String?
    /** Код купона (номер). */
    public var couponCode: String?
    /** Цена. */
    public var amount: Double?
    /** Внешний идентификатор товара купона. */
    public var goodsId: String?
    /** Идентификатор пользователя. */
    public var personId: Int?

    public init(id: String? = nil, couponText: String? = nil, couponCode: String? = nil, amount: Double? = nil, goodsId: String? = nil, personId: Int? = nil) {
        self.id = id
        self.couponText = couponText
        self.couponCode = couponCode
        self.amount = amount
        self.goodsId = goodsId
        self.personId = personId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case couponText
        case couponCode
        case amount
        case goodsId
        case personId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(couponText, forKey: .couponText)
        try container.encodeIfPresent(couponCode, forKey: .couponCode)
        try container.encodeIfPresent(amount, forKey: .amount)
        try container.encodeIfPresent(goodsId, forKey: .goodsId)
        try container.encodeIfPresent(personId, forKey: .personId)
    }
}

