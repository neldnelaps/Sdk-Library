//
// HistoryAggregateWithdrawRewardModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Model сумма покупок, сумма начисленных и списанных бонусов в рамках покупок. */
public struct HistoryAggregateWithdrawRewardModel: Codable, JSONEncodable, Hashable {

    /** Сумма покупок. */
    public var purchaseAmount: [HistoryAggregatePurchaseAmountModel]?
    /** Сумма списаний. */
    public var withdraws: [HistoryAggregateWithdrawModel]?
    /** Сумма начислений без скидок. */
    public var rewards: [HistoryAggregateRewardModel]?
    /** Колличество покупок. */
    public var purchaseCount: Int?

    public init(purchaseAmount: [HistoryAggregatePurchaseAmountModel]? = nil, withdraws: [HistoryAggregateWithdrawModel]? = nil, rewards: [HistoryAggregateRewardModel]? = nil, purchaseCount: Int? = nil) {
        self.purchaseAmount = purchaseAmount
        self.withdraws = withdraws
        self.rewards = rewards
        self.purchaseCount = purchaseCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case purchaseAmount
        case withdraws
        case rewards
        case purchaseCount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(purchaseAmount, forKey: .purchaseAmount)
        try container.encodeIfPresent(withdraws, forKey: .withdraws)
        try container.encodeIfPresent(rewards, forKey: .rewards)
        try container.encodeIfPresent(purchaseCount, forKey: .purchaseCount)
    }
}

