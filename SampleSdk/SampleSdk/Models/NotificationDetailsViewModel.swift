//
// NotificationDetailsViewModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** View-модкль для Push уведомления. */
public struct NotificationDetailsViewModel: Codable, JSONEncodable, Hashable {

    /** Идентификатор оповещения. */
    public var notificationId: Int?
    /** Данные для уведомления. */
    public var content: String?
    /** Короткий текст уведомления. */
    public var shortText: String?
    /** Прикрепленное изображение. */
    public var imageId: UUID?
    /** Url прикрепленного изображения. */
    public var imageUrl: String?

    public init(notificationId: Int? = nil, content: String? = nil, shortText: String? = nil, imageId: UUID? = nil, imageUrl: String? = nil) {
        self.notificationId = notificationId
        self.content = content
        self.shortText = shortText
        self.imageId = imageId
        self.imageUrl = imageUrl
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case notificationId
        case content
        case shortText
        case imageId
        case imageUrl
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(notificationId, forKey: .notificationId)
        try container.encodeIfPresent(content, forKey: .content)
        try container.encodeIfPresent(shortText, forKey: .shortText)
        try container.encodeIfPresent(imageId, forKey: .imageId)
        try container.encodeIfPresent(imageUrl, forKey: .imageUrl)
    }
}

